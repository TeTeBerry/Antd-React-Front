{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/src/pages/Register.js\";\nimport React, { Component } from \"react\";\nimport { Form, Input, Button } from 'antd';\nimport './Register.css';\nimport { Link } from 'react-router-dom';\nimport AuthService from './AuthService';\nimport axios from 'axios';\n\nvar RegisterForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegisterForm, _Component);\n\n  function RegisterForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.Auth = new AuthService();\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      firstname: \"\",\n      lastname: \"\",\n      username: \"\",\n      password: \"\"\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      axios.post(\"http://localhost:4000/users/register\", {\n        firstname: _this.state.firstname,\n        lastname: _this.state.lastname,\n        username: _this.state.username,\n        password: _this.state.password\n      }).then(function (data) {\n        console.log(data);\n\n        _this.props.history.replace('/login');\n      }).catch(function (error) {\n        console.log(error.response.data);\n        alert(error.response.data);\n      });\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    _this.onChangeFirstName = function (e) {\n      _this.setState({\n        firstname: e.target.value\n      });\n    };\n\n    _this.onChangeLastName = function (e) {\n      _this.setState({\n        lastname: e.target.value\n      });\n    };\n\n    _this.onChangeUsername = function (e) {\n      _this.setState({\n        username: e.target.value\n      });\n    };\n\n    _this.onChangePassword = function (e) {\n      _this.setState({\n        password: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RegisterForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.Auth.loggedIn());\n\n      if (this.Auth.loggedIn()) {\n        this.props.history.push('/login');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      return React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"register-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Register\"), React.createElement(Form, Object.assign({}, formItemLayout, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"First Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, getFieldDecorator('firstname', {\n        rules: [{\n          required: true,\n          message: 'Please input your First Name!'\n        }]\n      })(React.createElement(Input, {\n        onChange: this.onChangeFirstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Last Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, getFieldDecorator('lastname', {\n        rules: [{\n          required: true,\n          message: 'Please input your Last Name!'\n        }]\n      })(React.createElement(Input, {\n        onChange: this.onChangeLastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, getFieldDecorator('username', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        onChange: this.onChangeUsername,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onChange: this.onChangePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Register\"), React.createElement(Link, {\n        to: \"/login\",\n        style: {\n          padding: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return RegisterForm;\n}(Component);\n\nvar WrappedRegistrationForm = Form.create({\n  name: 'register'\n})(RegisterForm);\nexport default WrappedRegistrationForm;","map":{"version":3,"sources":["/Users/berry/antd-demo/src/pages/Register.js"],"names":["React","Component","Form","Input","Button","Link","AuthService","axios","RegisterForm","Auth","state","confirmDirty","autoCompleteResult","firstname","lastname","username","password","handleSubmit","e","preventDefault","post","then","data","console","log","props","history","replace","catch","error","response","alert","form","validateFieldsAndScroll","err","values","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","onChangeFirstName","onChangeLastName","onChangeUsername","onChangePassword","loggedIn","push","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","rules","required","message","validator","padding","WrappedRegistrationForm","create","name"],"mappings":"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","sourcesContent":["import React,{ Component } from \"react\";\nimport { Form, Input, Button} from 'antd';\nimport './Register.css'\nimport { Link } from 'react-router-dom';\nimport AuthService from'./AuthService';\nimport axios from 'axios';\n\n\n\n\nclass RegisterForm extends Component {\n    Auth = new AuthService();\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n        firstname: \"\",\n        lastname: \"\",\n        username: \"\",\n        password: \"\"\n      };\n    \n      handleSubmit = (e) => {\n        e.preventDefault();\n        axios.post(\"http://localhost:4000/users/register\",{\n          firstname: this.state.firstname,\n          lastname: this.state.lastname,\n          username: this.state.username,\n          password: this.state.password\n        }).then((data) => {\n          console.log(data);\n          this.props.history.replace('/login')\n        }).catch((error) => {\n          console.log(error.response.data);\n          alert(error.response.data);\n        })\n        this.props.form.validateFieldsAndScroll((err, values) => {\n          if (!err) {\n            console.log('Received values of form: ', values);\n          }\n        });\n      }\n    \n      handleConfirmBlur = (e) => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n      }\n    \n      compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('Two passwords that you enter is inconsistent!');\n        } else {\n          callback();\n        }\n      }\n    \n      validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n          form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n      }\n      componentDidMount() {\n        console.log(this.Auth.loggedIn());\n        if(this.Auth.loggedIn()){\n            this.props.history.push('/login')\n        }\n    }\n    onChangeFirstName = (e) => {\n      this.setState({\n        firstname: e.target.value\n      });\n    }\n\n    onChangeLastName = (e) => {\n      this.setState({\n        lastname: e.target.value\n      });\n    }\n    onChangeUsername = (e) => {\n      this.setState({\n        username: e.target.value\n      });\n    }\n    onChangePassword = (e) => {\n      this.setState({\n        password: e.target.value\n      });\n    }\n\n    \n    \n      render() { \n        const { getFieldDecorator } = this.props.form;\n    \n        const formItemLayout = {\n          labelCol: {\n            xs: { span: 24 },\n            sm: { span: 8 },\n          },\n          wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 16 },\n          },\n        };\n\n        const tailFormItemLayout = {\n            wrapperCol: {\n              xs: {\n                span: 24,\n                offset: 0,\n              },\n              sm: {\n                span: 16,\n                offset: 8,\n              },\n            },\n          };\n    \n        return (\n            <div className=\"center\">\n            <div className=\"register-card\">\n            <h1>Register</h1>\n          <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Form.Item\n              label=\"First Name\"\n            >\n              {getFieldDecorator('firstname', {\n                rules: [{ required: true, message: 'Please input your First Name!' }],\n              })(\n                <Input onChange={this.onChangeFirstName}/>\n              )}\n            </Form.Item>\n            <Form.Item\n              label=\"Last Name\"\n            >\n              {getFieldDecorator('lastname', {\n                rules: [{ required: true, message: 'Please input your Last Name!' }],\n              })(\n                <Input onChange={this.onChangeLastName}/>\n              )}\n            </Form.Item>\n            <Form.Item\n              label=\"Username\"\n            >\n              {getFieldDecorator('username', {\n                rules: [{ required: true, message: 'Please input your username!' }],\n              })(\n                <Input onChange={this.onChangeUsername}/>\n              )}\n            </Form.Item>\n            <Form.Item\n              label=\"Password\"\n            >\n              {getFieldDecorator('password', {\n                rules: [{\n                  required: true, message: 'Please input your password!',\n                }, {\n                  validator: this.validateToNextPassword,\n                }],\n              })(\n                <Input type=\"password\" onChange={this.onChangePassword}/>\n              )}\n            </Form.Item>\n            <Form.Item\n              label=\"Confirm Password\"\n            >\n              {getFieldDecorator('confirm', {\n                rules: [{\n                  required: true, message: 'Please confirm your password!',\n                }, {\n                  validator: this.compareToFirstPassword,\n                }],\n              })(\n                <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n              )}\n            </Form.Item>\n            <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n          <Link to=\"/login\" style={{padding:15}}>Cancel</Link>\n        </Form.Item>\n          </Form>\n          </div>\n          </div>\n        );\n          \n      }\n    }\n    const WrappedRegistrationForm = Form.create({ name: 'register' })(RegisterForm);\n\nexport default WrappedRegistrationForm;"]},"metadata":{},"sourceType":"module"}