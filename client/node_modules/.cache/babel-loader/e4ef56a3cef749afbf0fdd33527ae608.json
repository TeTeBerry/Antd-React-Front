{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/src/pages/withAuth.js\";\nimport React, { Component } from 'react';\nimport AuthService from './AuthService';\nexport default function withAuth(AuthComponent) {\n  var _temp;\n\n  var Auth = new AuthService();\n  return _temp =\n  /*#__PURE__*/\n  function (_Component) {\n    _inherits(AuthWrapped, _Component);\n\n    function AuthWrapped() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, AuthWrapped);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AuthWrapped)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        comfirm: null,\n        loaded: false\n      };\n      return _this;\n    }\n\n    _createClass(AuthWrapped, [{\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        if (!Auth.loggedIn()) {\n          this.props.history.replace('/login');\n        } else {\n          try {\n            var confirm = Auth.getConfirm();\n            console.log(\"confirmation is:\", confirm);\n            this.setState({\n              confirm: confirm,\n              loaded: true\n            });\n          } catch (err) {\n            console.log(err);\n            Auth.logout();\n            this.props.history.repalce('/loign');\n          }\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        if (this.state.loaded === true) {\n          if (this.state.confirm) {\n            console.log(\"confirmed!\");\n            return React.createElement(AuthComponent, {\n              history: this.props.history,\n              confirm: this.state.confirm,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            });\n          } else {\n            console.log(\"not confirmed!\");\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }]);\n\n    return AuthWrapped;\n  }(Component), _temp;\n}","map":{"version":3,"sources":["/Users/berry/antd-demo/src/pages/withAuth.js"],"names":["React","Component","AuthService","withAuth","AuthComponent","Auth","state","comfirm","loaded","loggedIn","props","history","replace","confirm","getConfirm","console","log","setState","err","logout","repalce"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,QAAT,CAAkBC,aAAlB,EAAiC;AAAA;;AAE5C,MAAMC,IAAI,GAAG,IAAIH,WAAJ,EAAb;AAEA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,YACII,KADJ,GACY;AACJC,QAAAA,OAAO,EAAE,IADL;AAEJC,QAAAA,MAAM,EAAE;AAFJ,OADZ;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAMyB;AACjB,YAAI,CAACH,IAAI,CAACI,QAAL,EAAL,EAAsB;AAClB,eAAKC,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AACH,SAFD,MAEO;AACH,cAAI;AACA,gBAAMC,OAAO,GAAGR,IAAI,CAACS,UAAL,EAAhB;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BH,OAA/B;AACA,iBAAKI,QAAL,CAAc;AACVJ,cAAAA,OAAO,EAAEA,OADC;AAEVL,cAAAA,MAAM,EAAE;AAFE,aAAd;AAIH,WAPD,CAQA,OAAMU,GAAN,EAAW;AACPH,YAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAb,YAAAA,IAAI,CAACc,MAAL;AACA,iBAAKT,KAAL,CAAWC,OAAX,CAAmBS,OAAnB,CAA2B,QAA3B;AACH;AACJ;AACJ;AAxBL;AAAA;AAAA,+BAyBa;AACL,YAAI,KAAKd,KAAL,CAAWE,MAAX,KAAsB,IAA1B,EAAgC;AAC5B,cAAG,KAAKF,KAAL,CAAWO,OAAd,EAAuB;AACnBE,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,mBACI,oBAAC,aAAD;AAAe,cAAA,OAAO,EAAE,KAAKN,KAAL,CAAWC,OAAnC;AAA4C,cAAA,OAAO,EAAE,KAAKL,KAAL,CAAWO,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,WALD,MAKO;AACHE,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,mBAAO,IAAP;AACH;AACJ,SAVD,MAUO;AACH,iBAAO,IAAP;AACH;AACJ;AAvCL;;AAAA;AAAA,IAAiCf,SAAjC;AA0CH","sourcesContent":["import React, { Component } from'react';\nimport AuthService from './AuthService';\n\nexport default function withAuth(AuthComponent) {\n\n    const Auth = new AuthService();\n\n    return class AuthWrapped extends Component {\n        state = {\n            comfirm: null,\n            loaded: false\n        }\n\n        componentWillMount() {\n            if (!Auth.loggedIn()) {\n                this.props.history.replace('/login')\n            } else {\n                try {\n                    const confirm = Auth.getConfirm()\n                    console.log(\"confirmation is:\",confirm);\n                    this.setState({\n                        confirm: confirm,\n                        loaded: true\n                    })\n                }\n                catch(err) {\n                    console.log(err);\n                    Auth.logout()\n                    this.props.history.repalce('/loign');\n                }\n            }\n        }\n        render() {\n            if (this.state.loaded === true) {\n                if(this.state.confirm) {\n                    console.log(\"confirmed!\")\n                    return(\n                        <AuthComponent history={this.props.history} confirm={this.state.confirm} />\n                    )\n                } else {\n                    console.log(\"not confirmed!\")\n                    return null\n                }\n            } else {\n                return null\n            }\n        }\n    }\n\n}"]},"metadata":{},"sourceType":"module"}