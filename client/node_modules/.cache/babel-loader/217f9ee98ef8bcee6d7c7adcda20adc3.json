{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/src/pages/Admin.js\";\nimport React from 'react';\nimport { Table } from 'antd';\nimport axios from 'axios';\nimport AuthService from './AuthService';\nimport { Modal, Button } from 'antd';\nvar confirm = Modal.confirm;\nvar columns = [{\n  title: 'Username',\n  dataIndex: 'username'\n}, {\n  title: 'First Name',\n  dataIndex: 'firstName'\n}, {\n  title: 'Last Name',\n  dataIndex: 'lastName'\n}, {\n  title: 'Action',\n  key: 'action',\n  render: function render() {\n    return React.createElement(Button, {\n      onClick: showDeleteConfirm,\n      type: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Delete\");\n  }\n}];\n\nvar showDeleteConfirm = function showDeleteConfirm() {\n  confirm({\n    title: \"Are you sure delete this admin?\",\n    okText: 'Yes',\n    okType: 'danger',\n    cancelText: 'No',\n    onOk: function onOk() {\n      this.deleteAdmin();\n      console.log('OK');\n    },\n    onCancel: function onCancel() {\n      console.log('Cancel');\n    }\n  });\n};\n\nvar Admin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Admin, _React$Component);\n\n  function Admin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Admin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.Auth = new AuthService();\n    _this.state = {\n      userList: []\n    };\n\n    _this.deleteAdmin = function (_id) {\n      axios.delete('http://localhost:4000/users/' + _id).then(function (data) {\n        _this.setState({\n          userList: _this.state.userList.filter(function (item) {\n            return item._id !== _id;\n          })\n        });\n\n        console.log(data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Admin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var token = localStorage.getItem('id_token');\n      axios.get('http://localhost:4000/users', {\n        headers: {\n          'Authorization': \"Bearer \".concat(token)\n        }\n      }).then(function (data) {\n        _this2.setState({\n          userList: data.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var userList = this.state.userList;\n      return React.createElement(Table, {\n        rowKey: function rowKey(record) {\n          return record._id;\n        },\n        columns: columns,\n        dataSource: userList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Admin;\n}(React.Component);\n\nexport default Admin;","map":{"version":3,"sources":["/Users/berry/antd-demo/src/pages/Admin.js"],"names":["React","Table","axios","AuthService","Modal","Button","confirm","columns","title","dataIndex","key","render","showDeleteConfirm","okText","okType","cancelText","onOk","deleteAdmin","console","log","onCancel","Admin","Auth","state","userList","_id","delete","then","data","setState","filter","item","catch","error","token","localStorage","getItem","get","headers","record","Component"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { Table } from 'antd';\nimport axios from 'axios';\nimport AuthService from './AuthService';\nimport { Modal, Button } from 'antd';\n\n\n const confirm = Modal.confirm;\n\n const columns = [{\n  title: 'Username',\n  dataIndex: 'username',\n}, {\n  title: 'First Name',\n  dataIndex: 'firstName',\n}, {\n  title: 'Last Name',\n  dataIndex: 'lastName',\n}, {\n  title: 'Action',\n  key: 'action',\n  render: () => (\n    <Button  onClick={showDeleteConfirm} type=\"danger\">\n      Delete\n    </Button>\n  ),\n}];\n\n\n const showDeleteConfirm = () => {\n  confirm({\n    title: `Are you sure delete this admin?`,\n    okText: 'Yes',\n    okType: 'danger',\n    cancelText: 'No',\n    onOk() {\n      this.deleteAdmin();\n      console.log('OK');\n    },\n    onCancel() {\n      console.log('Cancel');\n    },\n  });\n}\n\n  \n\n\nclass Admin extends React.Component {\n    Auth = new AuthService();\n    state = {\n      userList :[]\n      }\n     \n      \n      componentDidMount() {\n        const token = localStorage.getItem('id_token')\n        axios.get('http://localhost:4000/users', { headers: {'Authorization' : `Bearer ${token}`}})\n        .then(data => {\n          this.setState({\n           userList: data.data\n          });\n        }).catch((error) => {\n          console.log(error);\n        })\n      }\n      deleteAdmin = (_id) => {\n        axios.delete('http://localhost:4000/users/'+_id)\n        .then((data) => {\n          this.setState({\n            userList: this.state.userList.filter(item => item._id !== _id)\n          })\n          console.log(data);\n        }).catch((error) => {\n          console.log(error);\n        })\n      }\n      \n\n    render() { \n      const {userList } = this.state;\n        return ( \n         <Table  rowKey={record => record._id} columns={columns} dataSource={userList} />\n         );\n    }\n}\n \nexport default Admin;"]},"metadata":{},"sourceType":"module"}