{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/src/pages/Report.js\";\nimport React, { Component } from \"react\";\nimport { G2, Chart, Geom, Axis, Tooltip, Coord, Label, Legend, View, Guide, Shape, Facet, Util } from \"bizcharts\";\nimport DataSet from \"@antv/data-set\";\n\nvar Report =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Report, _Component);\n\n  function Report() {\n    _classCallCheck(this, Report);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Report).apply(this, arguments));\n  }\n\n  _createClass(Report, [{\n    key: \"render\",\n    value: function render() {\n      var data = [{\n        month: \"Jan\",\n        Tokyo: 7.0,\n        London: 3.9\n      }, {\n        month: \"Feb\",\n        Tokyo: 6.9,\n        London: 4.2\n      }, {\n        month: \"Mar\",\n        Tokyo: 9.5,\n        London: 5.7\n      }, {\n        month: \"Apr\",\n        Tokyo: 14.5,\n        London: 8.5\n      }, {\n        month: \"May\",\n        Tokyo: 18.4,\n        London: 11.9\n      }, {\n        month: \"Jun\",\n        Tokyo: 21.5,\n        London: 15.2\n      }, {\n        month: \"Jul\",\n        Tokyo: 25.2,\n        London: 17.0\n      }, {\n        month: \"Aug\",\n        Tokyo: 26.5,\n        London: 16.6\n      }, {\n        month: \"Sep\",\n        Tokyo: 23.3,\n        London: 14.2\n      }, {\n        month: \"Oct\",\n        Tokyo: 18.3,\n        London: 10.3\n      }, {\n        month: \"Nov\",\n        Tokyo: 13.9,\n        London: 6.6\n      }, {\n        month: \"Dec\",\n        Tokyo: 9.6,\n        London: 4.8\n      }];\n      var ds = new DataSet();\n      var dv = ds.createView().source(data);\n      dv.transform({\n        type: \"fold\",\n        fields: [\"Tokyo\", \"London\"],\n        // expend key words\n        key: \"city\",\n        value: \"temperature\"\n      });\n      console.log(dv);\n      var cols = {\n        month: {\n          range: [0, 1]\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        height: 400,\n        data: dv,\n        scale: cols,\n        forceFit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        name: \"month\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        name: \"temperature\",\n        label: {\n          formatter: function formatter(val) {\n            return \"\".concat(val, \"\\xB0C\");\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        crosshairs: {\n          type: \"y\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Geom, {\n        type: \"line\",\n        position: \"month*temperature\",\n        size: 2,\n        color: \"city\",\n        shape: \"smooth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Geom, {\n        type: \"point\",\n        position: \"month*temperature\",\n        size: 4,\n        shape: \"circle\",\n        color: \"city\",\n        style: {\n          stroke: \"#fff\",\n          lineWidth: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Report;\n}(Component);\n\nexport default Report;","map":{"version":3,"sources":["/Users/berry/antd-demo/src/pages/Report.js"],"names":["React","Component","G2","Chart","Geom","Axis","Tooltip","Coord","Label","Legend","View","Guide","Shape","Facet","Util","DataSet","Report","data","month","Tokyo","London","ds","dv","createView","source","transform","type","fields","key","value","console","log","cols","range","formatter","val","stroke","lineWidth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    G2,\n    Chart,\n    Geom,\n    Axis,\n    Tooltip,\n    Coord,\n    Label,\n    Legend,\n    View,\n    Guide,\n    Shape,\n    Facet,\n    Util\n  } from \"bizcharts\";\n  import DataSet from \"@antv/data-set\";\nclass Report extends Component {\n    render() {\n        const data = [\n          {\n            month: \"Jan\",\n            Tokyo: 7.0,\n            London: 3.9\n          },\n          {\n            month: \"Feb\",\n            Tokyo: 6.9,\n            London: 4.2\n          },\n          {\n            month: \"Mar\",\n            Tokyo: 9.5,\n            London: 5.7\n          },\n          {\n            month: \"Apr\",\n            Tokyo: 14.5,\n            London: 8.5\n          },\n          {\n            month: \"May\",\n            Tokyo: 18.4,\n            London: 11.9\n          },\n          {\n            month: \"Jun\",\n            Tokyo: 21.5,\n            London: 15.2\n          },\n          {\n            month: \"Jul\",\n            Tokyo: 25.2,\n            London: 17.0\n          },\n          {\n            month: \"Aug\",\n            Tokyo: 26.5,\n            London: 16.6\n          },\n          {\n            month: \"Sep\",\n            Tokyo: 23.3,\n            London: 14.2\n          },\n          {\n            month: \"Oct\",\n            Tokyo: 18.3,\n            London: 10.3\n          },\n          {\n            month: \"Nov\",\n            Tokyo: 13.9,\n            London: 6.6\n          },\n          {\n            month: \"Dec\",\n            Tokyo: 9.6,\n            London: 4.8\n          }\n        ];\n        const ds = new DataSet();\n        const dv = ds.createView().source(data);\n        dv.transform({\n          type: \"fold\",\n          fields: [\"Tokyo\", \"London\"],\n          // expend key words\n          key: \"city\",\n          value: \"temperature\" \n        });\n        console.log(dv);\n        const cols = {\n          month: {\n            range: [0, 1]\n          }\n        };\n        return (\n          <div>\n            <Chart height={400} data={dv} scale={cols} forceFit>\n              <Legend />\n              <Axis name=\"month\" />\n              <Axis\n                name=\"temperature\"\n                label={{\n                  formatter: val => `${val}°C`\n                }}\n              />\n              <Tooltip\n                crosshairs={{\n                  type: \"y\"\n                }}\n              />\n              <Geom\n                type=\"line\"\n                position=\"month*temperature\"\n                size={2}\n                color={\"city\"}\n                shape={\"smooth\"}\n              />\n              <Geom\n                type=\"point\"\n                position=\"month*temperature\"\n                size={4}\n                shape={\"circle\"}\n                color={\"city\"}\n                style={{\n                  stroke: \"#fff\",\n                  lineWidth: 1\n                }}\n              />\n            </Chart>\n          </div>\n        );\n      }\n    }\n    \nexport default Report;"]},"metadata":{},"sourceType":"module"}