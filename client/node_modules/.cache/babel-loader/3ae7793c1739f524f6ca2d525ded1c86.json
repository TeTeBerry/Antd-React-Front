{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport './Login.css';\nimport { Form, Icon, Input, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport AuthService from './AuthService';\n\nvar NormalLoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NormalLoginForm, _Component);\n\n  function NormalLoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NormalLoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NormalLoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.Auth = new AuthService();\n    _this.state = {\n      username: \"\",\n      password: \"\"\n    };\n\n    _this.onChangeUsername = function (e) {\n      _this.setState({\n        username: e.target.value\n      });\n    };\n\n    _this.onChangePassword = function (e) {\n      _this.setState({\n        password: e.target.value\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.Auth.login(_this.state.username, _this.state.password).then(function (res) {\n        if (res === false) {\n          return alert(\"Sorry those credentials don't exist!\");\n        }\n\n        console.log(res);\n\n        _this.props.history.replace('/');\n      }).catch(function (err) {\n        alert(\"Invalid Username\");\n      });\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NormalLoginForm, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      /* Here is a great place to redirect someone who is already logged in to the protected route */\n      if (this.Auth.loggedIn()) this.props.history.replace('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        onChange: this.onChangeUsername,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: this.onChangePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Log in\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), \"Or \", React.createElement(Link, {\n        to: \"/register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"register now!\")))));\n    }\n  }]);\n\n  return NormalLoginForm;\n}(Component);\n\nvar WrappedNormalLoginForm = Form.create({\n  name: 'normal_login'\n})(NormalLoginForm);\nexport default WrappedNormalLoginForm;","map":{"version":3,"sources":["/Users/berry/antd-demo/src/pages/Login.js"],"names":["React","Component","Form","Icon","Input","Button","Link","AuthService","NormalLoginForm","Auth","state","username","password","onChangeUsername","e","setState","target","value","onChangePassword","handleSubmit","preventDefault","login","then","res","alert","console","log","props","history","replace","catch","err","form","validateFields","values","loggedIn","getFieldDecorator","rules","required","message","color","WrappedNormalLoginForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Login.css';\nimport {\n    Form, Icon, Input, Button, \n  } from 'antd';\nimport { Link } from 'react-router-dom';\nimport AuthService from './AuthService';\n  \n  class NormalLoginForm extends Component {\n\n    Auth = new AuthService();\n\n    state = {\n      username: \"\",\n      password: \"\"\n    }\n\n    onChangeUsername = (e) => {\n      this.setState({\n        username: e.target.value\n      }) \n    }\n\n    onChangePassword = (e) => {\n      this.setState({\n        password: e.target.value\n      })\n    }\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.Auth.login(this.state.username,this.state.password)\n      .then(res => {\n        if (res === false) {\n          return alert(\"Sorry those credentials don't exist!\");\n        }\n        console.log(res);\n        this.props.history.replace('/')\n      }).catch(err => {\n        alert(\"Invalid Username\");\n      })\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    }\n    componentWillMount() {\n      /* Here is a great place to redirect someone who is already logged in to the protected route */\n      if (this.Auth.loggedIn())\n          this.props.history.replace('/');\n  }\n  \n    render() {\n      const { getFieldDecorator } = this.props.form;\n      return (\n        <div className=\"center\">\n        <div className=\"login-card\">\n        <h1>Login</h1>\n\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n          <Form.Item>\n            {getFieldDecorator('userName', {\n              rules: [{ required: true, message: 'Please input your username!' }],\n            })(\n              <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" \n              onChange={this.onChangeUsername}/>\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('password', {\n              rules: [{ required: true, message: 'Please input your Password!' }],\n            })(\n              <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" \n              onChange={this.onChangePassword}/>\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n              Log in\n            </Button><br/>\n            Or <Link to=\"/register\">register now!</Link>\n          </Form.Item>\n        </Form>\n        </div>\n        </div>\n      );\n    }\n  }\n  \n  const WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n  \nexport default WrappedNormalLoginForm;"]},"metadata":{},"sourceType":"module"}