{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/client/src/pages/Report.js\";\nimport React, { Component } from \"react\";\nimport { Chart, Geom, Axis, Tooltip, Legend } from \"bizcharts\";\nimport { Card } from 'antd';\nimport DataSet from \"@antv/data-set\";\n\nvar Report =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Report, _Component);\n\n  function Report() {\n    _classCallCheck(this, Report);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Report).apply(this, arguments));\n  }\n\n  _createClass(Report, [{\n    key: \"render\",\n    value: function render() {\n      var data = [{\n        month: \"Jan\",\n        Monthly: 3.9\n      }, {\n        month: \"Feb\",\n        Monthly: 4.2\n      }, {\n        month: \"Mar\",\n        Monthly: 5.7\n      }, {\n        month: \"Apr\",\n        Monthly: 8.5\n      }, {\n        month: \"May\",\n        Monthly: 11.9\n      }, {\n        month: \"Jun\",\n        Monthly: 15.2\n      }, {\n        month: \"Jul\",\n        Monthly: 17.0\n      }, {\n        month: \"Aug\",\n        Monthly: 16.6\n      }, {\n        month: \"Sep\",\n        Monthly: 14.2\n      }, {\n        month: \"Oct\",\n        Daily: 18.3,\n        Weekly: 12.2,\n        Monthly: 10.3\n      }, {\n        month: \"Nov\",\n        Monthly: 6.6\n      }, {\n        month: \"Dec\",\n        Monthly: 4.8\n      }];\n      var ds = new DataSet();\n      var dv = ds.createView().source(data);\n      dv.transform({\n        type: \"fold\",\n        fields: [\"Monthly\"],\n        // 展开字段集\n        key: \"date\",\n        // key字段\n        value: \"volume\" // value字段\n\n      });\n      console.log(dv);\n      var cols = {\n        month: {\n          range: [0, 1]\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Water report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: 14,\n          color: 'rgba(0, 0, 0, 0.85)',\n          marginBottom: 16,\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Water graph\"), React.createElement(Card, {\n        type: \"inner\",\n        title: \"Monthly report\",\n        extra: React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"More\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        height: 400,\n        data: dv,\n        scale: cols,\n        forceFit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        name: \"month\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        name: \"volume\",\n        label: {\n          formatter: function formatter(val) {\n            return \"\".concat(val, \"L\");\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        crosshairs: {\n          type: \"y\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Geom, {\n        type: \"line\",\n        position: \"month*volume\",\n        size: 2,\n        color: \"date\",\n        shape: \"smooth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Geom, {\n        type: \"point\",\n        position: \"month*volume\",\n        size: 4,\n        shape: \"circle\",\n        color: \"date\",\n        style: {\n          stroke: \"#fff\",\n          lineWidth: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Report;\n}(Component);\n\nexport default Report;","map":{"version":3,"sources":["/Users/berry/antd-demo/client/src/pages/Report.js"],"names":["React","Component","Chart","Geom","Axis","Tooltip","Legend","Card","DataSet","Report","data","month","Monthly","Daily","Weekly","ds","dv","createView","source","transform","type","fields","key","value","console","log","cols","range","fontSize","color","marginBottom","fontWeight","formatter","val","stroke","lineWidth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Chart,\n    Geom,\n    Axis,\n    Tooltip,\n    Legend,\n  } from \"bizcharts\";\n  import { Card } from 'antd';\n  import DataSet from \"@antv/data-set\";\nclass Report extends Component {\n    \n    render() {\n        const data = [\n            {\n              month: \"Jan\",\n              Monthly: 3.9\n            },\n            {\n              month: \"Feb\",\n              Monthly: 4.2\n            },\n            {\n              month: \"Mar\",\n              Monthly: 5.7\n            },\n            {\n              month: \"Apr\",\n              Monthly: 8.5\n            },\n            {\n              month: \"May\",\n              Monthly: 11.9\n            },\n            {\n              month: \"Jun\",\n              Monthly: 15.2\n            },\n            {\n              month: \"Jul\",\n              Monthly: 17.0\n            },\n            {\n              month: \"Aug\",\n              Monthly: 16.6\n            },\n            {\n              month: \"Sep\",\n              Monthly: 14.2\n            },\n            {\n              month: \"Oct\",\n              Daily: 18.3,\n              Weekly:12.2,\n              Monthly: 10.3\n            },\n            {\n              month: \"Nov\",\n              Monthly: 6.6\n            },\n            {\n              month: \"Dec\",\n              Monthly: 4.8\n            }\n          ];\n          const ds = new DataSet();\n          const dv = ds.createView().source(data);\n          dv.transform({\n            type: \"fold\",\n            fields: [\"Monthly\"],\n            // 展开字段集\n            key: \"date\",\n            // key字段\n            value: \"volume\" // value字段\n          });\n          console.log(dv);\n          const cols = {\n            month: {\n              range: [0, 1]\n            }\n          };\n      return(\n        <div>\n      <Card title=\"Water report\">\n      <p\n      style={{\n        fontSize: 14,\n        color: 'rgba(0, 0, 0, 0.85)',\n        marginBottom: 16,\n        fontWeight: 500,\n      }}\n    >\n      Water graph\n    </p>\n\n    <Card\n      type=\"inner\"\n      title=\"Monthly report\"\n      extra={<a href=\"#\">More</a>}\n    >\n        <Chart height={400} data={dv} scale={cols} forceFit>\n          <Legend />\n          <Axis name=\"month\" />\n          <Axis\n            name=\"volume\"\n            label={{\n              formatter: val => `${val}L`\n            }}\n          />\n          <Tooltip\n            crosshairs={{\n              type: \"y\"\n            }}\n          />\n          <Geom\n            type=\"line\"\n            position=\"month*volume\"\n            size={2}\n            color={\"date\"}\n            shape={\"smooth\"}\n          />\n          <Geom\n            type=\"point\"\n            position=\"month*volume\"\n            size={4}\n            shape={\"circle\"}\n            color={\"date\"}\n            style={{\n              stroke: \"#fff\",\n              lineWidth: 1\n            }}\n          />\n        </Chart>\n        </Card>\n      </Card>\n      </div>\n    );\n      }\n    }\n    \nexport default Report;"]},"metadata":{},"sourceType":"module"}