{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/src/pages/CreateMember.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button } from 'antd';\nimport { Form, Input } from 'antd';\nimport { Link } from 'react-router-dom';\n\nvar CreateMember =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateMember, _Component);\n\n  function CreateMember() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateMember);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateMember)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ModalText: 'Content of the modal',\n      visible: false,\n      confirmLoading: false\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleOk = function () {\n      _this.setState({\n        ModalText: 'The modal will be closed after two seconds',\n        confirmLoading: true\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n      }, 2000);\n    };\n\n    _this.handleCancel = function () {\n      console.log('Clicked cancel button');\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateMember, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          visible = _this$state.visible,\n          confirmLoading = _this$state.confirmLoading;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Create Member\"), React.createElement(Modal, {\n        title: \"Create Member\",\n        visible: visible,\n        onOk: this.handleOk,\n        confirmLoading: confirmLoading,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, formItemLayout, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"First Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, getFieldDecorator('firstname', {\n        rules: [{\n          required: true,\n          message: 'Please input your First Name!'\n        }]\n      })(React.createElement(Input, {\n        onChange: this.onChangeFirstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Last Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, getFieldDecorator('lastname', {\n        rules: [{\n          required: true,\n          message: 'Please input your Last Name!'\n        }]\n      })(React.createElement(Input, {\n        onChange: this.onChangeLastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, getFieldDecorator('username', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        onChange: this.onChangeUsername,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onChange: this.onChangePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Register\"), React.createElement(Link, {\n        to: \"/login\",\n        style: {\n          padding: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return CreateMember;\n}(Component);\n\nvar WrappedRegistrationForm = Form.create({\n  name: 'register'\n})(CreateMember);\nexport default WrappedRegistrationForm;","map":{"version":3,"sources":["/Users/berry/antd-demo/src/pages/CreateMember.js"],"names":["React","Component","Modal","Button","Form","Input","Link","CreateMember","state","ModalText","visible","confirmLoading","showModal","setState","handleOk","setTimeout","handleCancel","console","log","getFieldDecorator","props","form","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","handleSubmit","rules","required","message","onChangeFirstName","onChangeLastName","onChangeUsername","validator","validateToNextPassword","onChangePassword","compareToFirstPassword","handleConfirmBlur","padding","WrappedRegistrationForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button } from 'antd';\nimport { Form, Input} from 'antd';\nimport { Link } from 'react-router-dom';\n\nclass CreateMember extends Component {\n  state = {\n    ModalText: 'Content of the modal',\n    visible: false,\n    confirmLoading: false,\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  }\n\n  handleOk = () => {\n    this.setState({\n      ModalText: 'The modal will be closed after two seconds',\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 2000);\n  }\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  }\n\n  render() {\n    const { visible, confirmLoading} = this.state;\n    const { getFieldDecorator } = this.props.form;\n    \n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n\n    const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      };\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Create Member\n        </Button>\n        <Modal\n          title=\"Create Member\"\n          visible={visible}\n          onOk={this.handleOk}\n          confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n        >\n                    <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Form.Item\n              label=\"First Name\"\n            >\n              {getFieldDecorator('firstname', {\n                rules: [{ required: true, message: 'Please input your First Name!' }],\n              })(\n                <Input onChange={this.onChangeFirstName}/>\n              )}\n            </Form.Item>\n            <Form.Item\n              label=\"Last Name\"\n            >\n              {getFieldDecorator('lastname', {\n                rules: [{ required: true, message: 'Please input your Last Name!' }],\n              })(\n                <Input onChange={this.onChangeLastName}/>\n              )}\n            </Form.Item>\n            <Form.Item\n              label=\"Username\"\n            >\n              {getFieldDecorator('username', {\n                rules: [{ required: true, message: 'Please input your username!' }],\n              })(\n                <Input onChange={this.onChangeUsername}/>\n              )}\n            </Form.Item>\n            <Form.Item\n              label=\"Password\"\n            >\n              {getFieldDecorator('password', {\n                rules: [{\n                  required: true, message: 'Please input your password!',\n                }, {\n                  validator: this.validateToNextPassword,\n                }],\n              })(\n                <Input type=\"password\" onChange={this.onChangePassword}/>\n              )}\n            </Form.Item>\n            <Form.Item\n              label=\"Confirm Password\"\n            >\n              {getFieldDecorator('confirm', {\n                rules: [{\n                  required: true, message: 'Please confirm your password!',\n                }, {\n                  validator: this.compareToFirstPassword,\n                }],\n              })(\n                <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n              )}\n            </Form.Item>\n            <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n          <Link to=\"/login\" style={{padding:15}}>Cancel</Link>\n        </Form.Item>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(CreateMember);\nexport default WrappedRegistrationForm;"]},"metadata":{},"sourceType":"module"}