// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test case for CreateMeter get member list  1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateMeter />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Button
          block={false}
          ghost={false}
          htmlType="button"
          loading={false}
          onClick={[Function]}
          type="primary"
        >
          Create Meter
        </Button>,
        <Form(CreateMember)
          handleSubmit={[Function]}
          onCancel={[Function]}
          visible={false}
          wrappedComponentRef={[Function]}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "block": false,
          "children": "Create Meter",
          "ghost": false,
          "htmlType": "button",
          "loading": false,
          "onClick": [Function],
          "type": "primary",
        },
        "ref": null,
        "rendered": "Create Meter",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "handleSubmit": [Function],
          "onCancel": [Function],
          "visible": false,
          "wrappedComponentRef": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Button
            block={false}
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[Function]}
            type="primary"
          >
            Create Meter
          </Button>,
          <Form(CreateMember)
            handleSubmit={[Function]}
            onCancel={[Function]}
            visible={false}
            wrappedComponentRef={[Function]}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "block": false,
            "children": "Create Meter",
            "ghost": false,
            "htmlType": "button",
            "loading": false,
            "onClick": [Function],
            "type": "primary",
          },
          "ref": null,
          "rendered": "Create Meter",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "handleSubmit": [Function],
            "onCancel": [Function],
            "visible": false,
            "wrappedComponentRef": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
