{"version":3,"sources":["pages/auth/AuthService.js","pages/adminpage/ChangePW.js","pages/adminpage/UpdateMeterForm.js","pages/adminpage/CreateMeterForm.js","pages/adminpage/CreateMeter.js","pages/adminpage/Meter.js","pages/common/Report.js","pages/common/WaterBill.js","pages/memberpage/SetupVolume.js","pages/memberpage/Member.js","pages/auth/Login.js","pages/common/SensorCard.js","pages/common/SensorData.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","domain","_this","this","Object","classCallCheck","login","userName","password","fetch","concat","method","body","JSON","stringify","then","res","setToken","msg","setUserName","data","console","log","getToken","getUserName","Promise","resolve","isLoggedIn","localStorage","setItem","getItem","idToken","logout","removeItem","getConfirm","answer","url","options","headers","Accept","Content-Type","objectSpread","_checkStatus","response","json","status","error","Error","statusText","Option","Select","ChangePW","Auth","state","oldPwd","newPwd","success","message","onChangeUserName","value","setState","onChangeOldPwd","e","target","onChangeNewPwd","handleChangePw","preventDefault","user","q","axios","post","code","alert","props","history","push","catch","form","validateFields","err","values","getFieldDecorator","react_default","a","createElement","className","es_form","onSubmit","Item","rules","required","es_select","showSearch","style","width","placeholder","optionFilterProp","onChange","filterOption","input","option","children","toLowerCase","indexOf","prefix","icon","type","color","min","es_button","htmlType","React","Component","ChangePw","Form","create","name","CollectionUpdateForm","_Component","UpdateMeter","_getPrototypeOf2","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","disabled","visible","inherits","createClass","key","_this$props","onCancel","handleSubmit","modal","title","okText","onOk","layout","label","max","CollectionCreateForm","CreateMeterForm","CreateMeter","showModal","handleCancel","createSuccess","handleCreate","formRef","formFields","getFieldsValue","member","meterDesc","meterName","memberName","room","memberContact","resetFields","coolName","saveFormRef","onClick","marginTop","adminpage_CreateMeterForm","wrappedComponentRef","confirm","Modal","Meter","memberList","showBill","showRealTime","showEditMoal","record","mid","formData","setFieldsValue","updateSuccess","deleteSuccess","handleUpdate","fetchMemberList","deleteMember","params","delete","filter","item","get","_this2","okType","cancelText","_this3","columns","dataIndex","render","size","divider","showDeleteConfirm","react_router_dom","to","adminpage_CreateMeter","table","rowKey","dataSource","UpdateMeterForm","currentDate","Date","date","getDate","month","getMonth","dateString","getFullYear","Report","dayData","weekData","monthData","getDailyReport","getWeeklyReport","getMonthlyReport","_this4","card","fontSize","marginBottom","fontWeight","BizCharts","height","scale","totalMilliters","tickInterval","forceFit","crosshairs","position","WaterBill","waterBill","getWaterBill","bordered","footer","VolumeCreateForm","_React$Component","_class","onCreate","tag","SetupVolume","volume","Member","memberpage_SetupVolume","RadioGroup","Radio","Group","Login","onChangeRadio","onChangePassword","handleLogin","replace","es_radio","WrappedNormalLoginForm","SensorCard","parseInt","isNaN","Math","round","header","ReactFC","fcRoot","FusionCharts","Charts","Widgets","FusionTheme","SensorData","chartRef","showChart","initValue","flowRate","flowMilliLitres","totalMilliLitres","sensorName","chart","caption","subCaption","xAxisName","yAxisName","numberPrefix","refreshinterval","slantLabels","numdisplaysets","labeldisplay","showValues","showRealTimeValue","theme","categories","category","clientDateTime","toString","dataset","chartConfigs","renderAt","dataFormat","getDataFor","timerID","setInterval","d","x_axis","y_axis","feedData","mode","yAxisMaxValue","yAxisMinValue","startUpdatingData","date_time","curr_hour","getHours","addLeadingZero","getMinutes","getSeconds","clearInterval","common_SensorCard","alt","ReactFC_default","assign","onRender","getChartRef","bind","num","menu","href","Header","Layout","Content","Footer","MenuItem","withRouter","_ref","defaultSelectedKeys","selectedKeys","location","pathname","lineHeight","toUpperCase","App","isAdmin","Success","_handleLogout","zIndex","Button","dropdown","overlay","padding","background","minHeight","react_router","path","component","textAlign","NormalLoginForm","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bdb58241.chunk.js","sourcesContent":["export default class AuthService {\n  //Initializing important variables\n\n  constructor(domain) {\n    this.domain = domain || \"https://iotwatersystemserver.herokuapp.com/iot\"; //API service domain\n  }\n\n  login = (userName, password) => {\n    return this.fetch(`${this.domain}/admin/login`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userName,\n        password\n      })\n    }).then(res => {\n      this.setToken(res.msg); //Setting the token in localStorage\n      this.setUserName(res.data.userName);\n      console.log(this.getToken());\n      console.log(this.getUserName());\n      return Promise.resolve(res);\n    });\n  };\n\n  isLoggedIn = () => {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken(); // Getting token from localstorage\n    return !!token; // handwaiving here\n  };\n\n  setUserName = userName => {\n    localStorage.setItem(\"currentUser\", userName);\n  };\n\n  getUserName = () => {\n    return localStorage.getItem(\"currentUser\");\n  };\n\n  setToken = idToken => {\n    //Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n  };\n\n  getToken = () => {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n    // return localStorage.clear();\n  };\n\n  logout = () => {\n    // Clear user token and profile data from localStorage\n    return localStorage.removeItem(\"id_token\");\n  };\n\n  getConfirm = () => {\n    // Using jwt-decode npm package to decode the token\n    let answer = this.getToken();\n    console.log(\"Recieved answer!\");\n    return answer;\n  };\n\n  fetch = (url, options) => {\n    //performs api calls sending the required authentication headers\n    const headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    };\n    //Setting Authorization header\n    //Authorization Bear xxxxxxxx.xxxxxxx\n    if (this.isLoggedIn()) {\n      headers[\"Authorization\"] = +this.getToken();\n    }\n\n    return fetch(url, {\n      headers,\n      ...options\n    })\n      .then(this._checkStatus)\n      .then(response => response.json());\n  };\n\n  _checkStatus = response => {\n    //raises an error in case response status is not a success\n    if (response.status >= 200 && response.status < 300) {\n      //Success status lies between 200 to 300\n      return response;\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  };\n}\n","import React from \"react\";\nimport { Select, Form, Icon, Input, Button, message } from \"antd\";\nimport \"./ChangePW.css\";\nimport AuthService from \"../auth/AuthService\";\nimport axios from \"axios\";\nimport q from \"querystring\";\n\nconst Option = Select.Option;\n\nclass ChangePW extends React.Component {\n  Auth = new AuthService();\n  state = {\n    userName: \"\",\n    oldPwd: \"\",\n    newPwd: \"\"\n  };\n\n  success = () => {\n    message.success(\"Update success!\");\n  };\n\n  onChangeUserName = value => {\n    console.log(`selected ${value}`);\n    this.setState({\n      userName: value\n    });\n  };\n\n  onChangeOldPwd = e => {\n    this.setState({\n      oldPwd: e.target.value\n    });\n  };\n\n  onChangeNewPwd = e => {\n    this.setState({\n      newPwd: e.target.value\n    });\n  };\n\n  handleChangePw = e => {\n    e.preventDefault();\n    const user = q.stringify({\n      userName: this.state.userName,\n      oldPwd: this.state.oldPwd,\n      newPwd: this.state.newPwd\n    });\n    console.log(user);\n\n    axios\n      .post(\"http://localhost:8080/iot/admin/updatePassword\", user)\n      .then(res => {\n        if (res.data.code !== 200) {\n          return alert(res.data.msg);\n        }\n        console.log(res.data.code);\n        this.props.history.push(\"/\" + this.state.userName);\n        this.success();\n      })\n      .catch(error => {\n        console.log(error);\n        alert(\"Failure change password\");\n      });\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <div className=\"ant-form\">\n        <Form onSubmit={this.handleChangePw} className=\"login-form\">\n          <Form.Item>\n            {getFieldDecorator(\"userName\", {\n              rules: [{ required: true, message: \"Please select person!\" }]\n            })(\n              <Select\n                showSearch\n                style={{ width: 200 }}\n                placeholder=\"Select a person\"\n                optionFilterProp=\"children\"\n                onChange={this.onChangeUserName}\n                filterOption={(input, option) =>\n                  option.props.children\n                    .toLowerCase()\n                    .indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                <Option value={\"admin\"}>Admin</Option>\n                <Option value={\"member\"}>Member</Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item>\n            {getFieldDecorator(\"oldPwd\", {\n              rules: [\n                { required: true, message: \"Please input your old Password!\" }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                type=\"password\"\n                placeholder=\"old Password\"\n                style={{ width: \"200px\" }}\n                onChange={this.onChangeOldPwd}\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"newPwd\", {\n              rules: [\n                { required: true, message: \"Please input your new Password!\" },\n                { min: 4, message: \"At least 4 digits!\" }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                type=\"password\"\n                placeholder=\"new Password\"\n                style={{ width: \"200px\" }}\n                onChange={this.onChangeNewPwd}\n              />\n            )}\n          </Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n            style={{ width: \"200px\" }}\n          >\n            Change password\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst ChangePw = Form.create({ name: \"normal_login\" })(ChangePW);\n\nexport default ChangePw;\n","import React, { Component } from \"react\";\nimport { Modal, Form, Input } from \"antd\";\n\nconst CollectionUpdateForm = Form.create({ name: \"form_in_modal\" })(\n  class UpdateMeter extends Component {\n    state = {\n      disabled: true,\n      visible: false\n    };\n\n    render() {\n      const { visible, onCancel, handleSubmit, form } = this.props;\n      const { getFieldDecorator } = form;\n\n      return (\n        <Modal\n          visible={visible}\n          title=\"Edit Form\"\n          okText=\"OK\"\n          onCancel={onCancel}\n          onOk={handleSubmit}\n        >\n          <Form layout=\"vertical\">\n            <Form.Item label=\"ID\">\n              {getFieldDecorator(\"mid\", {\n                rules: [{ required: true, message: \"Please input meter name!\" }]\n              })(<Input disabled={this.state.disabled} />)}\n            </Form.Item>\n            <Form.Item label=\"Meter Name\">\n              {getFieldDecorator(\"meterName\", {\n                rules: [\n                  { required: true, message: \"Please input meter name!\" },\n                  { max: 10, message: \"Please input correct meter name!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Descriptions\">\n              {getFieldDecorator(\"meterDesc\", {\n                rules: [\n                  { required: true, message: \"Please input descriptions!\" },\n                  { max: 30, message: \"Max 30 digits!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Member Name\">\n              {getFieldDecorator(\"memberName\", {\n                rules: [\n                  { required: true, message: \"Please input member name!\" },\n                  { max: 15, message: \"Incorrect format!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Room Number\">\n              {getFieldDecorator(\"room\", {\n                rules: [\n                  { required: true, message: \"Please input room number!\" },\n                  { max: 5, message: \"Invild room number!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Member Contact\">\n              {getFieldDecorator(\"memberContact\", {\n                rules: [\n                  { required: true, message: \"Please input member contact!\" },\n                  {\n                    type: \"email\",\n                    message: \"The input is not valid E-mail!\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n          </Form>\n        </Modal>\n      );\n    }\n  }\n);\n\nexport default CollectionUpdateForm;\n","import React, { Component } from \"react\";\nimport { Modal, Form, Input } from \"antd\";\n\nconst CollectionCreateForm = Form.create({ name: \"form_in_modal\" })(\n  class CreateMeterForm extends Component {\n    render() {\n      const { visible, onCancel, handleSubmit, form } = this.props;\n      const { getFieldDecorator } = form;\n\n      return (\n        <Modal\n          visible={visible}\n          title=\"Create Form\"\n          okText=\"OK\"\n          onCancel={onCancel}\n          onOk={handleSubmit}\n        >\n          <Form layout=\"vertical\">\n            <Form.Item label=\"Meter Name\">\n              {getFieldDecorator(\"meterName\", {\n                rules: [\n                  { required: true, message: \"Please input meter name!\" },\n                  { max: 10, message: \"Please input correct meter name!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Descriptions\">\n              {getFieldDecorator(\"meterDesc\", {\n                rules: [\n                  { required: true, message: \"Please input descriptions!\" },\n                  { max: 30, message: \"Max 30 digits!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Member Name\">\n              {getFieldDecorator(\"memberName\", {\n                rules: [\n                  { required: true, message: \"Please input member name!\" },\n                  { max: 15, message: \"Incorrect format!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Room Number\">\n              {getFieldDecorator(\"room\", {\n                rules: [\n                  { required: true, message: \"Please input room number!\" },\n                  { max: 5, message: \"Invild room number!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Member Contact(Email)\">\n              {getFieldDecorator(\"memberContact\", {\n                rules: [\n                  { required: true, message: \"Please input member contact!\" },\n                  {\n                    type: \"email\",\n                    message: \"The input is not valid E-mail!\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n          </Form>\n        </Modal>\n      );\n    }\n  }\n);\n\nexport default CollectionCreateForm;\n","import React, { Component } from \"react\";\nimport { Button, message } from \"antd\";\nimport axios from \"axios\";\nimport CollectionCreateForm from \"./CreateMeterForm\";\nimport AuthService from \"../auth/AuthService\";\n\nclass CreateMeter extends Component {\n  Auth = new AuthService();\n  state = {\n    visible: false\n  };\n\n  error = () => {\n    message.error(\"Add Fail\");\n  };\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  createSuccess = () => {\n    message.success(\"Create success!\");\n  };\n\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    const formFields = form.getFieldsValue();\n    const member = {\n      meterDesc: formFields.meterDesc,\n      meterName: formFields.meterName,\n      memberName: formFields.memberName,\n      room: formFields.room,\n      memberContact: formFields.memberContact\n    };\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      console.log(\"Received values of form: \", values);\n      this.setState({ visible: false });\n      form.resetFields();\n    });\n\n    axios\n      .post(\"/meter/addMeter\", member)\n      .then(member => {\n        if (member.data.code !== 200) {\n          return this.error();\n        }\n        this.props.coolName(member);\n        this.createSuccess();\n      })\n      .catch(error => {\n        console.log(error);\n        this.error();\n      });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          type=\"primary\"\n          onClick={this.showModal}\n          style={{ marginTop: 6 }}\n        >\n          Create Meter\n        </Button>\n        <CollectionCreateForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          handleSubmit={this.handleCreate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CreateMeter;\n","import React, { Component } from \"react\";\n\nimport { Table, message, Modal, Button, Divider } from \"antd\";\nimport axios from \"axios\";\nimport CollectionUpdateForm from \"./UpdateMeterForm\";\nimport { Link } from \"react-router-dom\";\nimport CreateMeter from \"./CreateMeter\";\nimport AuthService from \"../auth/AuthService\";\n\nconst confirm = Modal.confirm;\n\nconst headers = {\n  \"Content-Type\": \"application/x-www-form-urlencoded\"\n};\n\nclass Meter extends Component {\n  Auth = new AuthService();\n  state = {\n    memberList: []\n  };\n\n  error = () => {\n    message.error(\"Opreating Fail\");\n  };\n\n  showBill = () => {\n    this.props.history.push(\"/waterbill\");\n  };\n\n  showRealTime = () => {\n    this.props.history.push(\"/SensorData\");\n  };\n\n  showEditMoal = record => {\n    const { form } = this.formRef.props;\n    form.memberList = record;\n    console.log(record.mid);\n    const formFields = form.memberList;\n    console.log(formFields);\n    const formData = {\n      mid: record.mid,\n      meterName: record.meterName,\n      meterDesc: record.meterDesc,\n      memberName: record.memberName,\n      room: record.room,\n      memberContact: record.memberContact\n    };\n    form.setFieldsValue(formData);\n    this.setState({\n      visible: true\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  updateSuccess = () => {\n    message.success(\"Update success\");\n  };\n\n  deleteSuccess = () => {\n    message.success(\"Delete success!\");\n  };\n\n  handleUpdate = () => {\n    const { form } = this.formRef.props;\n    const formFields = form.getFieldsValue();\n    console.log(formFields.mid);\n    const formData = {\n      mid: formFields.mid,\n      meterName: formFields.meterName,\n      meterDesc: formFields.meterDesc,\n      room: formFields.room,\n      memberContact: formFields.memberContact,\n      memberName: formFields.memberName\n    };\n    console.log(formData);\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      console.log(\"Received values of form: \", values);\n      form.resetFields();\n      this.setState({ visible: false });\n    });\n    axios\n      .post(\"/meter/update\", formData)\n      .then(data => {\n        console.log(data.data.code);\n        if (data.data.code !== 200) {\n          return this.error();\n        }\n        this.fetchMemberList();\n        this.updateSuccess();\n        console.log(data);\n      })\n      .catch(error => {\n        console.log(error);\n        this.error();\n      });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  deleteMember = mid => {\n    const params = { mid: mid };\n    console.log(params);\n    axios\n      .delete(\n        \"/meter/delete\",\n        { params: params },\n        {\n          headers\n        }\n      )\n      .then(data => {\n        this.setState({\n          memberList: this.state.memberList.filter(item => item.mid !== mid)\n        });\n        this.deleteSuccess();\n        console.log(data);\n      })\n      .catch(error => {\n        console.log(error);\n        this.error();\n      });\n  };\n\n  showDeleteConfirm(mid, meterName) {\n    console.log(mid);\n    confirm({\n      title: `Are you sure delete ${meterName}?`,\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk: () => {\n        this.deleteMember(mid);\n        console.log(\"OK\");\n      },\n      onCancel() {\n        console.log(\"Cancel\");\n      }\n    });\n  }\n\n  fetchMemberList = () => {\n    axios\n      .get(\"/meter/getMeters\")\n      .then(res => {\n        console.log(res.data.data);\n        this.setState({\n          memberList: res.data.data\n        });\n        console.log(this.Auth.getToken());\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  componentDidMount() {\n    this.fetchMemberList();\n  }\n\n  render() {\n    const columns = [\n      {\n        title: \"Meter Name\",\n        dataIndex: \"meterName\"\n      },\n      {\n        title: \"Descriptions\",\n        dataIndex: \"meterDesc\"\n      },\n      {\n        title: \"Member Name\",\n        dataIndex: \"memberName\"\n      },\n      {\n        title: \"Room\",\n        dataIndex: \"room\"\n      },\n      {\n        title: \"Member Contact\",\n        dataIndex: \"memberContact\"\n      },\n      {\n        title: \"Action\",\n        key: \"action\",\n        render: record => (\n          <span>\n            <Button size={\"small\"} onClick={() => this.showEditMoal(record)}>\n              Edit\n            </Button>\n            <Divider type=\"vertical\" />\n            <Button\n              size={\"small\"}\n              onClick={() =>\n                this.showDeleteConfirm(record.mid, record.meterName)\n              }\n              type=\"danger\"\n            >\n              Delete\n            </Button>\n            <Divider type=\"vertical\" />\n            <Button type=\"primary\" size={\"small\"} onClick={this.showRealTime}>\n              View Data\n            </Button>\n            <Divider type=\"vertical\" />\n            <Link to={\"/report/\" + record.meterName}>View Report</Link>\n            <Divider type=\"vertical\" />\n            <Button type=\"primary\" size={\"small\"} onClick={this.showBill}>\n              Water Bill\n            </Button>\n          </span>\n        )\n      }\n    ];\n\n    const { memberList } = this.state;\n    return (\n      <div>\n        <CreateMeter coolName={this.fetchMemberList} />\n        <br />\n        <Table\n          rowKey={record => record.mid}\n          columns={columns}\n          dataSource={memberList}\n        />\n        <CollectionUpdateForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          handleSubmit={this.handleUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Meter;\n","import React, { Component } from \"react\";\nimport { Card } from \"antd\";\nimport axios from \"axios\";\nimport { Chart, Geom, Axis, Tooltip } from \"bizcharts\";\n\nvar currentDate = new Date();\nvar date = currentDate.getDate();\nvar month = currentDate.getMonth();\nvar year = currentDate.getFullYear();\nvar dateString = year + \"-\" + (month + 1) + \"-\" + date;\n\nclass Report extends Component {\n  state = {\n    dayData: [],\n    weekData: [],\n    monthData: []\n  };\n\n  componentDidMount() {\n    this.getDailyReport();\n    this.getWeeklyReport();\n    this.getMonthlyReport();\n  }\n\n  getDailyReport() {\n    axios\n      .get(\n        `http://localhost:8080/iot/data/getDailyData?meterName=Sensor-1&date=2019-7-3`\n      )\n      .then(res => {\n        if (res.data.code === 200) {\n          this.setState({\n            dayData: res.data.data\n          });\n        }\n        console.log(dateString);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  getWeeklyReport() {\n    axios\n      .get(\n        `http://localhost:8080/iot/data/getWeeklyData?meterName=Sensor-1&date=2019-7-3`\n      )\n      .then(res => {\n        if (res.data.code === 200) {\n          this.setState({\n            weekData: res.data.data\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  getMonthlyReport() {\n    axios\n      .get(\n        `http://localhost:8080/iot/data/getMonthlyData?meterName=Sensor-1&date=${dateString}`\n      )\n      .then(res => {\n        if (res.data.code === 200) {\n          this.setState({\n            monthData: res.data.data\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { dayData } = this.state;\n    const daycols = {\n      totalMilliters: {\n        tickInterval: 1500\n      }\n    };\n    const { weekData } = this.state;\n    const weekcols = {\n      totalMilliters: {\n        tickInterval: 2000\n      }\n    };\n    const { monthData } = this.state;\n    const monthcols = {\n      totalMilliters: {\n        tickInterval: 3000\n      }\n    };\n\n    return (\n      <div>\n        <Card title=\"Water report\">\n          <p\n            style={{\n              fontSize: 14,\n              color: \"rgba(0, 0, 0, 0.85)\",\n              marginBottom: 16,\n              fontWeight: 500\n            }}\n          />\n\n          <Card type=\"inner\" title=\"Daliy report\">\n            <Chart height={400} data={dayData} scale={daycols} forceFit>\n              <Axis name=\"hour\" />\n              <Axis name=\"totalMilliters\" />\n              <Tooltip\n                crosshairs={{\n                  type: \"y\"\n                }}\n              />\n              <Geom type=\"interval\" position=\"hour*totalMilliters\" />\n            </Chart>\n          </Card>\n\n          <Card type=\"inner\" title=\"Weekly report\">\n            <Chart height={500} data={weekData} scale={weekcols} forceFit>\n              <Axis name=\"week\" />\n              <Axis name=\"totalMilliters\" />\n              <Tooltip\n                crosshairs={{\n                  type: \"y\"\n                }}\n              />\n              <Geom type=\"interval\" position=\"week*totalMilliters\" />\n            </Chart>\n          </Card>\n\n          <Card type=\"inner\" title=\"Monthly report\">\n            <Chart height={500} data={monthData} scale={monthcols} forceFit>\n              <Axis name=\"day\" />\n              <Axis name=\"totalMilliters\" />\n              <Tooltip\n                crosshairs={{\n                  type: \"y\"\n                }}\n              />\n              <Geom type=\"interval\" position=\"day*totalMilliters\" />\n            </Chart>\n          </Card>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Report;\n","import React from \"react\";\nimport { Table } from \"antd\";\nimport axios from \"axios\";\n\nclass WaterBill extends React.Component {\n  state = {\n    waterBill: []\n  };\n\n  componentDidMount() {\n    this.getWaterBill();\n  }\n\n  getWaterBill() {\n    axios\n      .get(\"http://localhost:8080/iot/meter/getWaterBill\")\n      .then(res => {\n        const mm = res.data.data[0].month;\n        var months = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\"\n        ];\n        const month = months[mm - 1] || \"\";\n        console.log(month);\n        if (res.data.code === 200) {\n          this.setState({\n            waterBill: res.data.data\n          });\n        }\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const columns = [\n      {\n        title: \"Meter Name\",\n        dataIndex: \"meterName\"\n      },\n      {\n        title: \"Member Name\",\n        dataIndex: \"memberName\"\n      },\n      {\n        title: \"Month\",\n        dataIndex: \"month\"\n      },\n      {\n        title: \"Amount volume (totalMilliters /mL)\",\n        dataIndex: \"totalMilliters\"\n      },\n      {\n        title: \"Amount Fee(Bath)\",\n        dataIndex: \"fee\"\n      }\n    ];\n    const { waterBill } = this.state;\n\n    return (\n      <Table\n        rowKey={record => record.memberName}\n        columns={columns}\n        dataSource={waterBill}\n        bordered\n        title={() => \"Water Bill\"}\n        footer={() => \"25Bath per unit,one unit is 1000mL\"}\n      />\n    );\n  }\n}\nexport default WaterBill;\n","import React from \"react\";\nimport { Button, Modal, Form, Input, message, Card, Tag } from \"antd\";\nimport axios from \"axios\";\nimport q from \"querystring\";\n\nconst VolumeCreateForm = Form.create({ name: \"form_in_modal\" })(\n  class extends React.Component {\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n      return (\n        <Modal\n          visible={visible}\n          title=\"Set up water volume\"\n          okText=\"Setup\"\n          onCancel={onCancel}\n          onOk={onCreate}\n        >\n          <Form layout=\"vertical\">\n            <Form.Item label=\"Member Name\">\n              {getFieldDecorator(\"memberName\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input meter name!\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n\n            <Form.Item label=\"Volume (mL)\">\n              {getFieldDecorator(\"volume\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input water volume!\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n          </Form>\n\n          <Tag color=\"magenta\" style={{ marginBottom: 15 }}>\n            Do you know ?\n          </Tag>\n          <Card style={{ width: 472 }}>\n            <p>\n              <b>1.</b>Toilet flush: 126 litres (two flushes per day; the rest\n              of the time use grey water)\n            </p>\n            <p>\n              <b>2.</b>Washing hands: 25.2 litres (12 times per day, on average)\n            </p>\n            <p>\n              <b>3.</b>Brushing teeth: 5.6 litres (twice per day)\n            </p>\n            <p>\n              <b>4.</b>Bath: 50 litres (1 half-full bath per week, which\n              includes water for rinsing hair. Washing your hair once a week may\n              be less than you or your hair type can tolerate but it’s perfectly\n              hygienic.)\n            </p>\n            <p>\n              <b>5.</b>Sponge bath: 1.8 litres (six times per week. Sponge baths\n              are also hygienic if done properly: it’s how patients are washed\n              in hospital. Make sure you keep your washcloths/sponges\n              scrupulously clean, and use a fresh one every time you wash.)\n            </p>\n            <p>\n              <b>6.</b>Handwashing dishes: 63 litres (3.5 sink-loads per week)\n            </p>\n            <p>\n              <b>7.</b>Dishwasher: 29 litres (one load per week)\n            </p>\n            <p>\n              <b>8.</b>Washing machine: 112.5 litres (1.5 loads per week)\n            </p>\n            <p>\n              <b>9.</b>Cooking: 7 litres (average one litre per day)\n            </p>\n            <p>\n              <b>10.</b>Water for tea/coffee: 4.2 litres (average three cups per\n              day)\n            </p>\n            <p>\n              <b>11.</b>Refilling pet water bowl: 6.3 litres (three cat bowls\n              per day)\n            </p>\n            <p>\n              <b>12.</b>Dripping tap: 35 litres\n            </p>\n            <p>\n              <b>TOTAL = 465.6 litres per week OR 66.5 litres per day</b>\n            </p>\n          </Card>\n        </Modal>\n      );\n    }\n  }\n);\n\nclass SetupVolume extends React.Component {\n  state = {\n    visible: false\n  };\n  error = () => {\n    message.error(\"Set up volume fail!\");\n  };\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n  createSuccess = () => {\n    message.success(\"Set up volume success!\");\n  };\n\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    const formFields = form.getFieldsValue();\n    const formData = q.stringify({\n      memberName: formFields.memberName,\n      volume: formFields.volume\n    });\n    console.log(formData);\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      console.log(\"Received values of form: \", values);\n      form.resetFields();\n      this.setState({ visible: false });\n    });\n\n    axios\n      .post(\"http://localhost:8080/iot/meter/setMemberVolume\", formData)\n      .then(res => {\n        console.log(res.data);\n        if (res.data.code !== 200) {\n          return alert(res.data.msg);\n        }\n        this.createSuccess();\n      });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  render() {\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Setup Volume\n        </Button>\n        <VolumeCreateForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          onCreate={this.handleCreate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SetupVolume;\n","import React from \"react\";\nimport { Table, Divider, Button } from \"antd\";\nimport SetupVolume from \"./SetupVolume\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Member extends React.Component {\n  state = {\n    memberList: []\n  };\n\n  showBill = () => {\n    this.props.history.push(\"/waterbill\");\n  };\n\n  showRealTime = () => {\n    this.props.history.push(\"/sensorData\");\n  };\n\n  fetchMemberList = () => {\n    axios\n      .get(\"http://localhost:8080/iot/meter/getMeters\")\n      .then(res => {\n        this.setState({\n          memberList: res.data.data\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  componentDidMount() {\n    this.fetchMemberList();\n  }\n  render() {\n    const columns = [\n      {\n        title: \"Meter Name\",\n        dataIndex: \"meterName\"\n      },\n      {\n        title: \"Descriptions\",\n        dataIndex: \"meterDesc\"\n      },\n      {\n        title: \"Member Name\",\n        dataIndex: \"memberName\"\n      },\n      {\n        title: \"Room\",\n        dataIndex: \"room\"\n      },\n      {\n        title: \"Action\",\n        key: \"action\",\n        render: record => (\n          <span>\n            <Button type=\"primary\" size={\"small\"} onClick={this.showRealTime}>\n              View Data\n            </Button>\n            <Divider type=\"vertical\" />\n            <Button type=\"primary\" size={\"small\"} onClick={this.showBill}>\n              Water Bill\n            </Button>\n            <Divider type=\"vertical\" />\n            <Link to={\"/report/\" + record.mid}>View Report</Link>\n          </span>\n        )\n      }\n    ];\n\n    const { memberList } = this.state;\n    return (\n      <div>\n        <SetupVolume />\n        <Table\n          rowKey={record => record.mid}\n          columns={columns}\n          dataSource={memberList}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Member;\n","import React, { Component } from \"react\";\nimport \"./Login.css\";\nimport { Form, Icon, Input, Button, Radio, message } from \"antd\";\nimport AuthService from \"./AuthService\";\nconst RadioGroup = Radio.Group;\n\nclass Login extends Component {\n  Auth = new AuthService();\n\n  state = {\n    userName: \"\",\n    password: \"\"\n  };\n\n  error = () => {\n    message.error(\"Invalid Account\");\n  };\n\n  success = () => {\n    message.success(\"Login Success!\");\n  };\n\n  onChangeRadio = e => {\n    console.log(\"radio checked\", e.target.value);\n    this.setState({\n      userName: e.target.value\n    });\n  };\n\n  onChangePassword = e => {\n    this.setState({\n      password: e.target.value\n    });\n  };\n\n  handleLogin = e => {\n    e.preventDefault();\n    this.Auth.login(this.state.userName, this.state.password)\n      .then(res => {\n        if (res.code !== 200) {\n          return alert(res.msg);\n        }\n        console.log(res.msg);\n        this.props.history.push(\"/\" + this.state.userName);\n        this.success();\n      })\n      .catch(error => {\n        this.error();\n        console.log(error);\n      });\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  };\n  componentDillMount() {\n    /* Here is a great place to redirect someone who is already logged in to the protected route */\n    if (this.Auth.isLoggedIn()) this.props.history.replace(\"/\");\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"center\">\n        <div className=\"login-card\">\n          <h1>Login</h1>\n\n          <Form onSubmit={this.handleLogin} className=\"login-form\">\n            <RadioGroup\n              onChange={this.onChangeRadio}\n              userName={this.state.value}\n            >\n              <Radio value={\"admin\"}>Admin</Radio>\n              <Radio value={\"member\"}>Member</Radio>\n            </RadioGroup>\n            <Form.Item>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  { required: true, message: \"Please input your Password!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={this.onChangePassword}\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-button\">\n                Log in\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(Login);\n\nexport default WrappedNormalLoginForm;\n","import React from \"react\";\n\nconst SensorCard = props => {\n  const value =\n    typeof parseInt(props.value) === \"number\" && !isNaN(parseInt(props.value))\n      ? Math.round(parseInt(props.value))\n      : props.value;\n  return (\n    <div className=\"card mr-0 custom-card\">\n      <div className=\"card-body\">\n        <h6 className=\"card-title mb-4 \">{props.header} </h6>\n\n        <h2 className=\"mb-1 text-primary\">{value}</h2>\n        <p className=\"card-text\">\n          <small className=\"text-muted\">{props.label}</small>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default SensorCard;\n","import React from \"react\";\nimport axios from \"axios\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./SensorData.css\";\nimport SensorName from \"./SensorCard\";\n\nReactFC.fcRoot(FusionCharts, Charts, Widgets, FusionTheme);\n\nclass SensorData extends React.Component {\n  chartRef = null;\n  state = {\n    showChart: false,\n    initValue: 0,\n    flowRate: \"\",\n    flowMilliLitres: \"\",\n    totalMilliLitres: \"\",\n    sensorName: \"\",\n    dataSource: {\n      chart: {\n        caption: \"Real Time Water Flow Rate\",\n        subCaption: \"\",\n        xAxisName: \"Local Time\",\n        yAxisName: \"Flow Rate\",\n        numberPrefix: \"L/min\",\n        refreshinterval: \"2\",\n        slantLabels: \"1\",\n        numdisplaysets: \"10\",\n        labeldisplay: \"rotate\",\n        showValues: \"0\",\n        showRealTimeValue: \"0\",\n        theme: \"fusion\"\n      },\n      categories: [\n        {\n          category: [\n            {\n              label: this.clientDateTime().toString()\n            }\n          ]\n        }\n      ],\n      dataset: [\n        {\n          data: [\n            {\n              value: 0\n            }\n          ]\n        }\n      ]\n    }\n  };\n  chartConfigs = {\n    type: \"realtimeline\",\n    renderAt: \"container\",\n    width: \"100%\",\n    height: \"400\",\n    dataFormat: \"json\"\n  };\n\n  componentDidMount() {\n    this.getDataFor();\n  }\n\n  startUpdatingData() {\n    this.timerID = setInterval(() => {\n      axios.get(\"http://172.20.10.9:8088/react.php\").then(d => {\n        let x_axis = this.clientDateTime();\n        let y_axis = d.data.flowRate;\n\n        console.log(d.data);\n        this.chartRef.feedData(\"&label=\" + x_axis + \"&value=\" + y_axis);\n        this.setState({\n          sensorName: d.data.sensorName,\n          flowRate: d.data.flowRate,\n          flowMilliLitres: d.data.flowMilliLitres,\n          totalMilliLitres: d.data.totalMilliLitres\n        });\n      });\n    }, 1000);\n  }\n\n  getDataFor() {\n    axios\n      .get(\"http://172.20.10.9:8088/react.php\", {\n        mode: \"cors\"\n      })\n      .then(d => {\n        const dataSource = this.state.dataSource;\n        dataSource.chart.yAxisMaxValue = 100;\n        dataSource.chart.yAxisMinValue = 0;\n        dataSource.dataset[0][\"data\"][0].value = d.data.flowRate;\n\n        this.setState(\n          {\n            showChart: true,\n            dataSource: dataSource,\n            initValue: d.data.flowRate\n          },\n          () => {\n            this.startUpdatingData();\n          }\n        );\n      });\n  }\n\n  static addLeadingZero(num) {\n    return num <= 9 ? \"0\" + num : num;\n  }\n\n  clientDateTime() {\n    var date_time = new Date();\n    console.log(date_time);\n    var curr_hour = date_time.getHours();\n    var zero_added_curr_hour = SensorData.addLeadingZero(curr_hour);\n    var curr_min = date_time.getMinutes();\n    var curr_sec = date_time.getSeconds();\n    var curr_time = zero_added_curr_hour + \":\" + curr_min + \":\" + curr_sec;\n    return curr_time;\n  }\n\n  getChartRef(chart) {\n    this.chartRef = chart;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return (\n      <div className=\"row mt-5 mt-xs-4\">\n        <div className=\"col-12 mb-3\">\n          <div className=\"card-deck custom-card-deck\">\n            <SensorName\n              header=\"Sensor Name\"\n              alt=\"fireSpot\"\n              label=\"(Meter Name)\"\n              value={this.state.sensorName}\n            />\n            <SensorName\n              header=\"Flow Rate\"\n              alt=\"fireSpot\"\n              label=\"(L/min)\"\n              value={this.state.flowRate}\n            />\n            <SensorName\n              header=\"Current Liquid Flowing\"\n              alt=\"fireSpot\"\n              label=\"(mL/Sec)\"\n              value={this.state.flowMilliLitres}\n            />\n            <SensorName\n              header=\"Output Liquid Quantity\"\n              alt=\"fireSpot\"\n              label=\"(mL)\"\n              value={this.state.totalMilliLitres}\n            />\n          </div>\n        </div>\n        <div className=\"col-12\">\n          <div className=\"card custom-card mb-5 mb-xs-4\">\n            <div className=\"card-body\">\n              {this.state.showChart ? (\n                <ReactFC\n                  {...this.chartConfigs}\n                  dataSource={this.state.dataSource}\n                  onRender={this.getChartRef.bind(this)}\n                />\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SensorData;\n","import React, { Component } from \"react\";\nimport { Layout, Menu, Dropdown, Icon, message } from \"antd\";\nimport \"./App.css\";\nimport AuthService from \"./pages/auth/AuthService\";\nimport { Radio } from \"antd\";\nimport ChangePw from \"./pages/adminpage/ChangePW\";\nimport { Switch, Route, Link, withRouter } from \"react-router-dom\";\nimport Meter from \"./pages/adminpage/Meter\";\nimport Report from \"./pages/common/Report\";\nimport WaterBill from \"./pages/common/WaterBill\";\nimport Member from \"./pages/memberpage/Member\";\nimport NormalLoginForm from \"./pages/auth/Login\";\nimport SensorData from \"./pages/common/SensorData\";\n\nconst menu = (\n  <Menu>\n    <Menu.Item>\n      <a target=\"_self\" href=\"/changepw\">\n        Change password\n      </a>\n    </Menu.Item>\n  </Menu>\n);\n\nconst { Header, Content, Footer } = Layout;\n\nconst Auth = new AuthService();\n\nconst MenuItem = withRouter(({ history }) => {\n  return (\n    <Menu\n      theme=\"dark\"\n      mode=\"horizontal\"\n      defaultSelectedKeys={[\"1\"]}\n      selectedKeys={[history.location.pathname]}\n      style={{ lineHeight: \"64px\" }}\n    >\n      <Menu.Item key=\"1\">\n        {localStorage.getItem(\"currentUser\").toUpperCase()}\n        <Link to={`/${localStorage.getItem(\"currentUser\")}`} />\n      </Menu.Item>\n    </Menu>\n  );\n});\n\nclass App extends Component {\n  state = {\n    isAdmin: (localStorage.getItem(\"currentUser\") || \"\") === \"admin\"\n  };\n\n  Success = () => {\n    message.success(\"You are logged out from the system\");\n  };\n\n  _handleLogout = () => {\n    Auth.logout();\n    this.props.history.push(\"/login\");\n    this.Success();\n  };\n\n  componentWillMount() {\n    if (!Auth.isLoggedIn()) {\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  render() {\n    console.log(\"Rendering Appjs!\");\n    const isAdmin = (localStorage.getItem(\"currentUser\") || \"\") === \"admin\";\n    return (\n      <div>\n        <Layout className=\"layout\">\n          {this.props.location.pathname === \"/login\" || (\n            <Header style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}>\n              <div className=\"logo\">\n                <p>IoT Water System</p>\n              </div>\n              <div className=\"logout\">\n                <Radio.Button value=\"small\" onClick={this._handleLogout}>\n                  LOGOUT\n                  <Link to=\"/login\" />\n                </Radio.Button>\n              </div>\n              <div className=\"welcome\">\n                <span>\n                  <h5>\n                    Welcome!\n                    {isAdmin ? (\n                      <Dropdown overlay={menu}>\n                        <a className=\"ant-dropdown-link\" href=\"/changepw\">\n                          {localStorage.getItem(\"currentUser\")}\n                          <Icon type=\"down\" />\n                        </a>\n                      </Dropdown>\n                    ) : (\n                      <b>{localStorage.getItem(\"currentUser\")}</b>\n                    )}\n                  </h5>\n                </span>\n              </div>\n\n              <MenuItem />\n            </Header>\n          )}\n\n          <Content style={{ padding: \"50px 50px\" }}>\n            <div style={{ background: \"#fff\", padding: 24, minHeight: 650 }}>\n              <Switch>\n                <Route path=\"/changepw\" component={ChangePw} />\n                <Route path=\"/admin\" component={Meter} />\n                <Route path=\"/report\" component={Report} />\n                <Route path=\"/waterbill\" component={WaterBill} />\n                <Route path=\"/member\" component={Member} />\n                <Route path=\"/SensorData\" component={SensorData} />\n              </Switch>\n            </div>\n          </Content>\n\n          <Footer style={{ textAlign: \"center\" }}>\n            IoT Water System©2019 Created by ZiyuChen&&ZengyuLi\n          </Footer>\n          <Route path=\"/login\" component={NormalLoginForm} />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <div>\n      <App />\n    </div>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}