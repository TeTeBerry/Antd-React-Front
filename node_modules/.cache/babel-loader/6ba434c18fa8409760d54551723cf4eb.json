{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/client/src/pages/auth/Login.js\";\nimport React, { Component } from \"react\";\nimport \"./Login.css\";\nimport { Form, Icon, Input, Button, Radio, message } from \"antd\";\nimport AuthService from \"./AuthService\";\nvar RadioGroup = Radio.Group;\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.Auth = new AuthService();\n    _this.state = {\n      userName: \"\",\n      password: \"\"\n    };\n\n    _this.error = function () {\n      message.error(\"Invalid Account\");\n    };\n\n    _this.success = function () {\n      message.success(\"Login Suceess!\");\n    };\n\n    _this.onChangeRadio = function (e) {\n      console.log(\"radio checked\", e.target.value);\n\n      _this.setState({\n        userName: e.target.value\n      });\n    };\n\n    _this.onChangePassword = function (e) {\n      _this.setState({\n        password: e.target.value\n      });\n    };\n\n    _this.handleLogin = function (e) {\n      e.preventDefault();\n\n      _this.Auth.login(_this.state.userName, _this.state.password).then(function (res) {\n        if (res.code !== 200) {\n          return alert(res.msg);\n        }\n\n        console.log(res.msg);\n\n        _this.props.history.push(\"/\" + _this.state.userName);\n\n        _this.success();\n      }).catch(function (error) {\n        _this.error();\n\n        console.log(error);\n      });\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log(\"Received values of form: \", values);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDillMount\",\n    value: function componentDillMount() {\n      /* Here is a great place to redirect someone who is already logged in to the protected route */\n      if (this.Auth.isLoggedIn()) this.props.history.replace(\"/\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Form, {\n        onSubmit: this.handleLogin,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(RadioGroup, {\n        onChange: this.onChangeRadio,\n        userName: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        value: \"admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Admin\"), React.createElement(Radio, {\n        value: \"member\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Member\")), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, getFieldDecorator(\"password\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Password!\"\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: this.onChangePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Log in\")))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar WrappedNormalLoginForm = Form.create({\n  name: \"normal_login\"\n})(Login);\nexport default WrappedNormalLoginForm;","map":{"version":3,"sources":["/Users/berry/antd-demo/client/src/pages/auth/Login.js"],"names":["React","Component","Form","Icon","Input","Button","Radio","message","AuthService","RadioGroup","Group","Login","Auth","state","userName","password","error","success","onChangeRadio","e","console","log","target","value","setState","onChangePassword","handleLogin","preventDefault","login","then","res","code","alert","msg","props","history","push","catch","form","validateFields","err","values","isLoggedIn","replace","getFieldDecorator","rules","required","color","WrappedNormalLoginForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Login.css\";\nimport { Form, Icon, Input, Button, Radio, message } from \"antd\";\nimport AuthService from \"./AuthService\";\nconst RadioGroup = Radio.Group;\n\nclass Login extends Component {\n  Auth = new AuthService();\n\n  state = {\n    userName: \"\",\n    password: \"\"\n  };\n\n  error = () => {\n    message.error(\"Invalid Account\");\n  };\n\n  success = () => {\n    message.success(\"Login Suceess!\");\n  };\n\n  onChangeRadio = e => {\n    console.log(\"radio checked\", e.target.value);\n    this.setState({\n      userName: e.target.value\n    });\n  };\n\n  onChangePassword = e => {\n    this.setState({\n      password: e.target.value\n    });\n  };\n\n  handleLogin = e => {\n    e.preventDefault();\n    this.Auth.login(this.state.userName, this.state.password)\n      .then(res => {\n        if (res.code !== 200) {\n          return alert(res.msg);\n        }\n        console.log(res.msg);\n        this.props.history.push(\"/\" + this.state.userName);\n        this.success();\n      })\n      .catch(error => {\n        this.error();\n        console.log(error);\n      });\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  };\n  componentDillMount() {\n    /* Here is a great place to redirect someone who is already logged in to the protected route */\n    if (this.Auth.isLoggedIn()) this.props.history.replace(\"/\");\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"center\">\n        <div className=\"login-card\">\n          <h1>Login</h1>\n\n          <Form onSubmit={this.handleLogin} className=\"login-form\">\n            <RadioGroup\n              onChange={this.onChangeRadio}\n              userName={this.state.value}\n            >\n              <Radio value={\"admin\"}>Admin</Radio>\n              <Radio value={\"member\"}>Member</Radio>\n            </RadioGroup>\n            <Form.Item>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  { required: true, message: \"Please input your Password!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={this.onChangePassword}\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-button\">\n                Log in\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(Login);\n\nexport default WrappedNormalLoginForm;\n"]},"metadata":{},"sourceType":"module"}