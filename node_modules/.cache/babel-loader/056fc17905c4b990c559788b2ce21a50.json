{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/client/src/pages/common/Report.js\";\nimport React, { Component } from \"react\";\nimport { Card } from \"antd\";\nimport axios from \"axios\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactFC.fcRoot(FusionCharts, Charts, Widgets, FusionTheme);\n\nvar Report =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Report, _Component);\n\n  function Report() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Report);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Report)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showChart: false,\n      initValue: 0,\n      dataSource: {\n        chart: {\n          caption: \"Real Time Water Flow Rate\",\n          subCaption: \"\",\n          xAxisName: \"Local Time\",\n          yAxisName: \"Output Liquid Quantity\",\n          numberPrefix: \"mL\",\n          refreshinterval: \"2\",\n          slantLabels: \"1\",\n          numdisplaysets: \"10\",\n          labeldisplay: \"rotate\",\n          showValues: \"0\",\n          showRealTimeValue: \"0\",\n          theme: \"fusion\"\n        },\n        categories: [{\n          category: [{\n            label: \"\"\n          }]\n        }],\n        dataset: [{\n          data: [{\n            value: 0\n          }]\n        }]\n      }\n    };\n    _this.chartConfigs = {\n      type: \"realtimeline\",\n      renderAt: \"container\",\n      width: \"100%\",\n      height: \"400\",\n      dataFormat: \"json\"\n    };\n    return _this;\n  }\n\n  _createClass(Report, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDataFor();\n    }\n  }, {\n    key: \"renderView\",\n    value: function renderView() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8080/iot/data/getDailyData?meterName=Sensor-1&date=2019-07-03\").then(function (d) {\n        var x_axis = d.data.hour;\n        var y_axis = d.data.totalMilliters;\n        console.log(d.data);\n\n        _this2.chartRef.feedData(\"&label=\" + x_axis + \"&value=\" + y_axis);\n      });\n    }\n  }, {\n    key: \"getDataFor\",\n    value: function getDataFor() {\n      var _this3 = this;\n\n      axios.get(\"http://localhost:8080/iot/data/getDailyData?meterName=Sensor-1&date=2019-07-03\", {\n        mode: \"cors\"\n      }).then(function (d) {\n        var dataSource = _this3.state.dataSource;\n        dataSource.chart.yAxisMaxValue = 100;\n        dataSource.chart.yAxisMinValue = 0;\n        dataSource.dataset[0][\"data\"][0].value = d.data.hour;\n\n        _this3.setState({\n          showChart: true,\n          dataSource: dataSource,\n          initValue: d.data.flowRate\n        }, function () {\n          _this3.renderView();\n        });\n      });\n    }\n  }, {\n    key: \"getChartRef\",\n    value: function getChartRef(chart) {\n      this.chartRef = chart;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Water report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: 14,\n          color: \"rgba(0, 0, 0, 0.85)\",\n          marginBottom: 16,\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Water report\"), React.createElement(Card, {\n        type: \"inner\",\n        title: \"Daliy report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card custom-card mb-5 mb-xs-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.state.showChart ? React.createElement(ReactFC, Object.assign({}, this.chartConfigs, {\n        dataSource: this.state.dataSource,\n        onRender: this.getChartRef.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })) : null)))), React.createElement(Card, {\n        type: \"inner\",\n        title: \"Weekly report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Card, {\n        type: \"inner\",\n        title: \"Monthly report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Report;\n}(Component);\n\nexport default Report;","map":{"version":3,"sources":["/Users/berry/antd-demo/client/src/pages/common/Report.js"],"names":["React","Component","Card","axios","FusionCharts","Charts","Widgets","ReactFC","FusionTheme","fcRoot","Report","state","showChart","initValue","dataSource","chart","caption","subCaption","xAxisName","yAxisName","numberPrefix","refreshinterval","slantLabels","numdisplaysets","labeldisplay","showValues","showRealTimeValue","theme","categories","category","label","dataset","data","value","chartConfigs","type","renderAt","width","height","dataFormat","getDataFor","get","then","d","x_axis","hour","y_axis","totalMilliters","console","log","chartRef","feedData","mode","yAxisMaxValue","yAxisMinValue","setState","flowRate","renderView","fontSize","color","marginBottom","fontWeight","getChartRef","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"antd\";\nimport axios from \"axios\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactFC.fcRoot(FusionCharts, Charts, Widgets, FusionTheme);\n\nclass Report extends Component {\n  state = {\n    showChart: false,\n    initValue: 0,\n    dataSource: {\n      chart: {\n        caption: \"Real Time Water Flow Rate\",\n        subCaption: \"\",\n        xAxisName: \"Local Time\",\n        yAxisName: \"Output Liquid Quantity\",\n        numberPrefix: \"mL\",\n        refreshinterval: \"2\",\n        slantLabels: \"1\",\n        numdisplaysets: \"10\",\n        labeldisplay: \"rotate\",\n        showValues: \"0\",\n        showRealTimeValue: \"0\",\n        theme: \"fusion\"\n      },\n      categories: [\n        {\n          category: [\n            {\n              label: \"\"\n            }\n          ]\n        }\n      ],\n      dataset: [\n        {\n          data: [\n            {\n              value: 0\n            }\n          ]\n        }\n      ]\n    }\n  };\n  chartConfigs = {\n    type: \"realtimeline\",\n    renderAt: \"container\",\n    width: \"100%\",\n    height: \"400\",\n    dataFormat: \"json\"\n  };\n\n  componentDidMount() {\n    this.getDataFor();\n  }\n\n  renderView() {\n    axios\n      .get(\n        \"http://localhost:8080/iot/data/getDailyData?meterName=Sensor-1&date=2019-07-03\"\n      )\n      .then(d => {\n        let x_axis = d.data.hour;\n        let y_axis = d.data.totalMilliters;\n\n        console.log(d.data);\n        this.chartRef.feedData(\"&label=\" + x_axis + \"&value=\" + y_axis);\n      });\n  }\n\n  getDataFor() {\n    axios\n      .get(\n        \"http://localhost:8080/iot/data/getDailyData?meterName=Sensor-1&date=2019-07-03\",\n        {\n          mode: \"cors\"\n        }\n      )\n      .then(d => {\n        const dataSource = this.state.dataSource;\n        dataSource.chart.yAxisMaxValue = 100;\n        dataSource.chart.yAxisMinValue = 0;\n        dataSource.dataset[0][\"data\"][0].value = d.data.hour;\n\n        this.setState(\n          {\n            showChart: true,\n            dataSource: dataSource,\n            initValue: d.data.flowRate\n          },\n          () => {\n            this.renderView();\n          }\n        );\n      });\n  }\n\n  getChartRef(chart) {\n    this.chartRef = chart;\n  }\n\n  render() {\n    return (\n      <div>\n        <Card title=\"Water report\">\n          <p\n            style={{\n              fontSize: 14,\n              color: \"rgba(0, 0, 0, 0.85)\",\n              marginBottom: 16,\n              fontWeight: 500\n            }}\n          >\n            Water report\n          </p>\n\n          <Card type=\"inner\" title=\"Daliy report\">\n            <div className=\"col-12\">\n              <div className=\"card custom-card mb-5 mb-xs-4\">\n                <div className=\"card-body\">\n                  {this.state.showChart ? (\n                    <ReactFC\n                      {...this.chartConfigs}\n                      dataSource={this.state.dataSource}\n                      onRender={this.getChartRef.bind(this)}\n                    />\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          <Card type=\"inner\" title=\"Weekly report\" />\n\n          <Card type=\"inner\" title=\"Monthly report\" />\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Report;\n"]},"metadata":{},"sourceType":"module"}