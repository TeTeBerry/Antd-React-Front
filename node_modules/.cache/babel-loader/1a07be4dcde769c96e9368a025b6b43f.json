{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/client/src/pages/adminpage/Meter.js\";\nimport React, { Component } from \"react\";\nimport { Table, message, Modal, Button, Divider } from \"antd\";\nimport axios from \"axios\";\nimport CollectionUpdateForm from \"./UpdateMeterForm\";\nimport { Link } from \"react-router-dom\";\nimport CreateMeter from \"./CreateMeter\";\nimport AuthService from \"../auth/AuthService\";\nvar confirm = Modal.confirm;\nvar headers = {\n  \"Content-Type\": \"application/x-www-form-urlencoded\"\n};\n\nvar Meter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Meter, _Component);\n\n  function Meter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Meter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Meter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.Auth = new AuthService();\n    _this.state = {\n      memberList: []\n    };\n\n    _this.error = function () {\n      message.error(\"Opreating Fail\");\n    };\n\n    _this.showBill = function () {\n      _this.props.history.push(\"/waterbill\");\n    };\n\n    _this.showRealTime = function () {\n      _this.props.history.push(\"/SensorData\");\n    };\n\n    _this.showEditMoal = function (record) {\n      var form = _this.formRef.props.form;\n      form.memberList = record;\n      console.log(record.mid);\n      var formFields = form.memberList;\n      console.log(formFields);\n      var formData = {\n        mid: record.mid,\n        meterName: record.meterName,\n        meterDesc: record.meterDesc,\n        memberName: record.memberName,\n        room: record.room,\n        memberContact: record.memberContact\n      };\n      form.setFieldsValue(formData);\n\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleCancel = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.updateSuccess = function () {\n      message.success(\"Update success\");\n    };\n\n    _this.deleteSuccess = function () {\n      message.success(\"Delete success!\");\n    };\n\n    _this.handleUpdate = function () {\n      var form = _this.formRef.props.form;\n      var formFields = form.getFieldsValue();\n      console.log(formFields.mid);\n      var formData = {\n        mid: formFields.mid,\n        meterName: formFields.meterName,\n        meterDesc: formFields.meterDesc,\n        room: formFields.room,\n        memberContact: formFields.memberContact,\n        memberName: formFields.memberName\n      };\n      console.log(formData);\n      form.validateFields(function (err, values) {\n        if (err) {\n          return;\n        }\n\n        console.log(\"Received values of form: \", values);\n        form.resetFields();\n\n        _this.setState({\n          visible: false\n        });\n      });\n      axios.post(\"http://localhost:8080/iot/meter/update\", formData).then(function (data) {\n        console.log(data.data.code);\n\n        if (data.data.code !== 200) {\n          return _this.error();\n        }\n\n        _this.fetchMemberList();\n\n        _this.updateSuccess();\n\n        console.log(data);\n      }).catch(function (error) {\n        console.log(error);\n\n        _this.error();\n      });\n    };\n\n    _this.saveFormRef = function (formRef) {\n      _this.formRef = formRef;\n    };\n\n    _this.deleteMember = function (mid) {\n      var params = {\n        mid: mid\n      };\n      console.log(params);\n      axios.delete(\"http://localhost:8080/iot/meter/delete\", {\n        params: params\n      }, {\n        headers: headers\n      }).then(function (data) {\n        _this.setState({\n          memberList: _this.state.memberList.filter(function (item) {\n            return item.mid !== mid;\n          })\n        });\n\n        _this.deleteSuccess();\n\n        console.log(data);\n      }).catch(function (error) {\n        console.log(error);\n\n        _this.error();\n      });\n    };\n\n    _this.fetchMemberList = function () {\n      axios.get(\"http://localhost:8080/iot/meter/getMeters\").then(function (res) {\n        console.log(res.data.data);\n\n        _this.setState({\n          memberList: res.data.data\n        });\n\n        console.log(_this.Auth.getToken());\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Meter, [{\n    key: \"showDeleteConfirm\",\n    value: function showDeleteConfirm(mid, meterName) {\n      var _this2 = this;\n\n      console.log(mid);\n      confirm({\n        title: \"Are you sure delete \".concat(meterName, \"?\"),\n        okText: \"Yes\",\n        okType: \"danger\",\n        cancelText: \"No\",\n        onOk: function onOk() {\n          _this2.deleteMember(mid);\n\n          console.log(\"OK\");\n        },\n        onCancel: function onCancel() {\n          console.log(\"Cancel\");\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchMemberList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var columns = [{\n        title: \"Meter Name\",\n        dataIndex: \"meterName\"\n      }, {\n        title: \"Descriptions\",\n        dataIndex: \"meterDesc\"\n      }, {\n        title: \"Member Name\",\n        dataIndex: \"memberName\"\n      }, {\n        title: \"Room\",\n        dataIndex: \"room\"\n      }, {\n        title: \"Member Contact\",\n        dataIndex: \"memberContact\"\n      }, {\n        title: \"Action\",\n        key: \"action\",\n        render: function render(record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"small\",\n            onClick: function onClick() {\n              return _this3.showEditMoal(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }), React.createElement(Button, {\n            size: \"small\",\n            onClick: function onClick() {\n              return _this3.showDeleteConfirm(record.mid, record.meterName);\n            },\n            type: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }, \"Delete\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }), React.createElement(Button, {\n            type: \"primary\",\n            size: \"small\",\n            onClick: _this3.showRealTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, \"View Data\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }), React.createElement(Link, {\n            to: \"/report/\" + record.mid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }, \"View Report\"), React.createElement(Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215\n            },\n            __self: this\n          }), React.createElement(Button, {\n            type: \"primary\",\n            size: \"small\",\n            onClick: _this3.showBill,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216\n            },\n            __self: this\n          }, \"Water Bill\"));\n        }\n      }];\n      var memberList = this.state.memberList;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(CreateMeter, {\n        coolName: this.fetchMemberList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(Table, {\n        rowKey: function rowKey(record) {\n          return record.mid;\n        },\n        columns: columns,\n        dataSource: memberList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(CollectionUpdateForm, {\n        wrappedComponentRef: this.saveFormRef,\n        visible: this.state.visible,\n        onCancel: this.handleCancel,\n        handleSubmit: this.handleUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Meter;\n}(Component);\n\nexport default Meter;","map":{"version":3,"sources":["/Users/berry/antd-demo/client/src/pages/adminpage/Meter.js"],"names":["React","Component","Table","message","Modal","Button","Divider","axios","CollectionUpdateForm","Link","CreateMeter","AuthService","confirm","headers","Meter","Auth","state","memberList","error","showBill","props","history","push","showRealTime","showEditMoal","record","form","formRef","console","log","mid","formFields","formData","meterName","meterDesc","memberName","room","memberContact","setFieldsValue","setState","visible","handleCancel","updateSuccess","success","deleteSuccess","handleUpdate","getFieldsValue","validateFields","err","values","resetFields","post","then","data","code","fetchMemberList","catch","saveFormRef","deleteMember","params","delete","filter","item","get","res","getToken","title","okText","okType","cancelText","onOk","onCancel","columns","dataIndex","key","render","showDeleteConfirm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Table, message, Modal, Button, Divider } from \"antd\";\nimport axios from \"axios\";\nimport CollectionUpdateForm from \"./UpdateMeterForm\";\nimport { Link } from \"react-router-dom\";\nimport CreateMeter from \"./CreateMeter\";\nimport AuthService from \"../auth/AuthService\";\n\nconst confirm = Modal.confirm;\n\nconst headers = {\n  \"Content-Type\": \"application/x-www-form-urlencoded\"\n};\n\nclass Meter extends Component {\n  Auth = new AuthService();\n  state = {\n    memberList: []\n  };\n\n  error = () => {\n    message.error(\"Opreating Fail\");\n  };\n\n  showBill = () => {\n    this.props.history.push(\"/waterbill\");\n  };\n\n  showRealTime = () => {\n    this.props.history.push(\"/SensorData\");\n  };\n\n  showEditMoal = record => {\n    const { form } = this.formRef.props;\n    form.memberList = record;\n    console.log(record.mid);\n    const formFields = form.memberList;\n    console.log(formFields);\n    const formData = {\n      mid: record.mid,\n      meterName: record.meterName,\n      meterDesc: record.meterDesc,\n      memberName: record.memberName,\n      room: record.room,\n      memberContact: record.memberContact\n    };\n    form.setFieldsValue(formData);\n    this.setState({\n      visible: true\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  updateSuccess = () => {\n    message.success(\"Update success\");\n  };\n\n  deleteSuccess = () => {\n    message.success(\"Delete success!\");\n  };\n\n  handleUpdate = () => {\n    const { form } = this.formRef.props;\n    const formFields = form.getFieldsValue();\n    console.log(formFields.mid);\n    const formData = {\n      mid: formFields.mid,\n      meterName: formFields.meterName,\n      meterDesc: formFields.meterDesc,\n      room: formFields.room,\n      memberContact: formFields.memberContact,\n      memberName: formFields.memberName\n    };\n    console.log(formData);\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      console.log(\"Received values of form: \", values);\n      form.resetFields();\n      this.setState({ visible: false });\n    });\n    axios\n      .post(\"http://localhost:8080/iot/meter/update\", formData)\n      .then(data => {\n        console.log(data.data.code);\n        if (data.data.code !== 200) {\n          return this.error();\n        }\n        this.fetchMemberList();\n        this.updateSuccess();\n        console.log(data);\n      })\n      .catch(error => {\n        console.log(error);\n        this.error();\n      });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  deleteMember = mid => {\n    const params = { mid: mid };\n    console.log(params);\n    axios\n      .delete(\n        \"http://localhost:8080/iot/meter/delete\",\n        { params: params },\n        {\n          headers\n        }\n      )\n      .then(data => {\n        this.setState({\n          memberList: this.state.memberList.filter(item => item.mid !== mid)\n        });\n        this.deleteSuccess();\n        console.log(data);\n      })\n      .catch(error => {\n        console.log(error);\n        this.error();\n      });\n  };\n\n  showDeleteConfirm(mid, meterName) {\n    console.log(mid);\n    confirm({\n      title: `Are you sure delete ${meterName}?`,\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk: () => {\n        this.deleteMember(mid);\n        console.log(\"OK\");\n      },\n      onCancel() {\n        console.log(\"Cancel\");\n      }\n    });\n  }\n\n  fetchMemberList = () => {\n    axios\n      .get(\"http://localhost:8080/iot/meter/getMeters\")\n      .then(res => {\n        console.log(res.data.data);\n        this.setState({\n          memberList: res.data.data\n        });\n        console.log(this.Auth.getToken());\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  componentDidMount() {\n    this.fetchMemberList();\n  }\n\n  render() {\n    const columns = [\n      {\n        title: \"Meter Name\",\n        dataIndex: \"meterName\"\n      },\n      {\n        title: \"Descriptions\",\n        dataIndex: \"meterDesc\"\n      },\n      {\n        title: \"Member Name\",\n        dataIndex: \"memberName\"\n      },\n      {\n        title: \"Room\",\n        dataIndex: \"room\"\n      },\n      {\n        title: \"Member Contact\",\n        dataIndex: \"memberContact\"\n      },\n      {\n        title: \"Action\",\n        key: \"action\",\n        render: record => (\n          <span>\n            <Button size={\"small\"} onClick={() => this.showEditMoal(record)}>\n              Edit\n            </Button>\n            <Divider type=\"vertical\" />\n            <Button\n              size={\"small\"}\n              onClick={() =>\n                this.showDeleteConfirm(record.mid, record.meterName)\n              }\n              type=\"danger\"\n            >\n              Delete\n            </Button>\n            <Divider type=\"vertical\" />\n            <Button type=\"primary\" size={\"small\"} onClick={this.showRealTime}>\n              View Data\n            </Button>\n            <Divider type=\"vertical\" />\n            <Link to={\"/report/\" + record.mid}>View Report</Link>\n            <Divider type=\"vertical\" />\n            <Button type=\"primary\" size={\"small\"} onClick={this.showBill}>\n              Water Bill\n            </Button>\n          </span>\n        )\n      }\n    ];\n\n    const { memberList } = this.state;\n    return (\n      <div>\n        <CreateMeter coolName={this.fetchMemberList} />\n        <br />\n        <Table\n          rowKey={record => record.mid}\n          columns={columns}\n          dataSource={memberList}\n        />\n        <CollectionUpdateForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          handleSubmit={this.handleUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Meter;\n"]},"metadata":{},"sourceType":"module"}