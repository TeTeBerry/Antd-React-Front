{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/client/src/pages/adminpage/CreateMeter.js\";\nimport React, { Component } from \"react\";\nimport { Button, message } from \"antd\";\nimport axios from \"axios\";\nimport CollectionCreateForm from \"./CreateMeterForm\";\nimport AuthService from \"../auth/AuthService\";\n\nvar CreateMeter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateMeter, _Component);\n\n  function CreateMeter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateMeter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateMeter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.Auth = new AuthService();\n    _this.state = {\n      visible: false\n    };\n\n    _this.error = function () {\n      message.error(\"Add Fail\");\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleCancel = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.createSuccess = function () {\n      message.success(\"Create success!\");\n    };\n\n    _this.handleCreate = function () {\n      var form = _this.formRef.props.form;\n      var formFields = form.getFieldsValue();\n      var member = {\n        meterDesc: formFields.meterDesc,\n        meterName: formFields.meterName,\n        memberName: formFields.memberName,\n        room: formFields.room,\n        memberContact: formFields.memberContact\n      };\n      form.validateFields(function (err, values) {\n        if (err) {\n          return;\n        }\n\n        console.log(\"Received values of form: \", values);\n\n        _this.setState({\n          visible: false\n        });\n\n        form.resetFields();\n      });\n      axios.post(\"http://localhost:8080/iot/meter/addMeter\", member).then(function (member) {\n        if (member.data.code !== 200) {\n          return _this.error();\n        }\n\n        _this.props.coolName(member);\n\n        _this.createSuccess();\n      }).catch(function (error) {\n        console.log(error);\n\n        _this.error();\n      });\n    };\n\n    _this.saveFormRef = function (formRef) {\n      _this.formRef = formRef;\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateMeter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.showModal,\n        style: {\n          marginTop: 6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Create Meter\"), React.createElement(CollectionCreateForm, {\n        wrappedComponentRef: this.saveFormRef,\n        visible: this.state.visible,\n        onCancel: this.handleCancel,\n        handleSubmit: this.handleCreate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CreateMeter;\n}(Component);\n\nexport default CreateMeter;","map":{"version":3,"sources":["/Users/berry/antd-demo/client/src/pages/adminpage/CreateMeter.js"],"names":["React","Component","Button","message","axios","CollectionCreateForm","AuthService","CreateMeter","Auth","state","visible","error","showModal","setState","handleCancel","createSuccess","success","handleCreate","form","formRef","props","formFields","getFieldsValue","member","meterDesc","meterName","memberName","room","memberContact","validateFields","err","values","console","log","resetFields","post","then","data","code","coolName","catch","saveFormRef","marginTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,mBAAjC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;IAEMC,W;;;;;;;;;;;;;;;;;UACJC,I,GAAO,IAAIF,WAAJ,E;UACPG,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;;UAIRC,K,GAAQ,YAAM;AACZR,MAAAA,OAAO,CAACQ,KAAR,CAAc,UAAd;AACD,K;;UAEDC,S,GAAY,YAAM;AAChB,YAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,K;;UAEDI,Y,GAAe,YAAM;AACnB,YAAKD,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,K;;UAEDK,a,GAAgB,YAAM;AACpBZ,MAAAA,OAAO,CAACa,OAAR,CAAgB,iBAAhB;AACD,K;;UAEDC,Y,GAAe,YAAM;AAAA,UACXC,IADW,GACF,MAAKC,OAAL,CAAaC,KADX,CACXF,IADW;AAEnB,UAAMG,UAAU,GAAGH,IAAI,CAACI,cAAL,EAAnB;AACA,UAAMC,MAAM,GAAG;AACbC,QAAAA,SAAS,EAAEH,UAAU,CAACG,SADT;AAEbC,QAAAA,SAAS,EAAEJ,UAAU,CAACI,SAFT;AAGbC,QAAAA,UAAU,EAAEL,UAAU,CAACK,UAHV;AAIbC,QAAAA,IAAI,EAAEN,UAAU,CAACM,IAJJ;AAKbC,QAAAA,aAAa,EAAEP,UAAU,CAACO;AALb,OAAf;AAOAV,MAAAA,IAAI,CAACW,cAAL,CAAoB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACnC,YAAID,GAAJ,EAAS;AACP;AACD;;AACDE,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;;AACA,cAAKlB,QAAL,CAAc;AAAEH,UAAAA,OAAO,EAAE;AAAX,SAAd;;AACAQ,QAAAA,IAAI,CAACgB,WAAL;AACD,OAPD;AASA9B,MAAAA,KAAK,CACF+B,IADH,CACQ,0CADR,EACoDZ,MADpD,EAEGa,IAFH,CAEQ,UAAAb,MAAM,EAAI;AACd,YAAIA,MAAM,CAACc,IAAP,CAAYC,IAAZ,KAAqB,GAAzB,EAA8B;AAC5B,iBAAO,MAAK3B,KAAL,EAAP;AACD;;AACD,cAAKS,KAAL,CAAWmB,QAAX,CAAoBhB,MAApB;;AACA,cAAKR,aAAL;AACD,OARH,EASGyB,KATH,CASS,UAAA7B,KAAK,EAAI;AACdqB,QAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;;AACA,cAAKA,KAAL;AACD,OAZH;AAaD,K;;UAED8B,W,GAAc,UAAAtB,OAAO,EAAI;AACvB,YAAKA,OAAL,GAAeA,OAAf;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,OAAO,EAAE,KAAKP,SAFhB;AAGE,QAAA,KAAK,EAAE;AAAE8B,UAAAA,SAAS,EAAE;AAAb,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAQE,oBAAC,oBAAD;AACE,QAAA,mBAAmB,EAAE,KAAKD,WAD5B;AAEE,QAAA,OAAO,EAAE,KAAKhC,KAAL,CAAWC,OAFtB;AAGE,QAAA,QAAQ,EAAE,KAAKI,YAHjB;AAIE,QAAA,YAAY,EAAE,KAAKG,YAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAiBD;;;;EA9EuBhB,S;;AAiF1B,eAAeM,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, message } from \"antd\";\nimport axios from \"axios\";\nimport CollectionCreateForm from \"./CreateMeterForm\";\nimport AuthService from \"../auth/AuthService\";\n\nclass CreateMeter extends Component {\n  Auth = new AuthService();\n  state = {\n    visible: false\n  };\n\n  error = () => {\n    message.error(\"Add Fail\");\n  };\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  createSuccess = () => {\n    message.success(\"Create success!\");\n  };\n\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    const formFields = form.getFieldsValue();\n    const member = {\n      meterDesc: formFields.meterDesc,\n      meterName: formFields.meterName,\n      memberName: formFields.memberName,\n      room: formFields.room,\n      memberContact: formFields.memberContact\n    };\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      console.log(\"Received values of form: \", values);\n      this.setState({ visible: false });\n      form.resetFields();\n    });\n\n    axios\n      .post(\"http://localhost:8080/iot/meter/addMeter\", member)\n      .then(member => {\n        if (member.data.code !== 200) {\n          return this.error();\n        }\n        this.props.coolName(member);\n        this.createSuccess();\n      })\n      .catch(error => {\n        console.log(error);\n        this.error();\n      });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          type=\"primary\"\n          onClick={this.showModal}\n          style={{ marginTop: 6 }}\n        >\n          Create Meter\n        </Button>\n        <CollectionCreateForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          handleSubmit={this.handleCreate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CreateMeter;\n"]},"metadata":{},"sourceType":"module"}