{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/client/src/pages/common/Report.js\";\nimport React, { Component } from \"react\";\nimport { Card } from \"antd\";\nimport axios from \"axios\";\nimport { Chart, Axis, Legend, Tooltip, Geom } from \"bizcharts\";\n\nvar Report =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Report, _Component);\n\n  function Report() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Report);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Report)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dayData: []\n    };\n    return _this;\n  }\n\n  _createClass(Report, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8080/iot/data/getDailyData?meterName=Sensor-1&date=2019-07-03\").then(function (res) {\n        _this2.setState({\n          dayData: res.data.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dayData = this.state.dayData;\n      var scale = {\n        hour: {\n          alias: \"Daily\"\n        },\n        totalMilliters: {\n          alias: \"TotalMilliters\"\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Water report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: 14,\n          color: \"rgba(0, 0, 0, 0.85)\",\n          marginBottom: 16,\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Water report\"), React.createElement(Card, {\n        type: \"inner\",\n        title: \"Daliy report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        height: 400,\n        data: dayData,\n        scale: scale,\n        forceFit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Axis, {\n        title: true,\n        name: \"Daily\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        title: true,\n        name: \"TotalMilliters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        crosshairs: {\n          type: \"rect\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Geom, {\n        type: \"interval\",\n        position: \"Daily*TotalMilliters\",\n        color: \"month\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))), React.createElement(Card, {\n        type: \"inner\",\n        title: \"Weekly report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Card, {\n        type: \"inner\",\n        title: \"Monthly report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Report;\n}(Component);\n\nexport default Report;","map":{"version":3,"sources":["/Users/berry/antd-demo/client/src/pages/common/Report.js"],"names":["React","Component","Card","axios","Chart","Axis","Legend","Tooltip","Geom","Report","state","dayData","get","then","res","setState","data","scale","hour","alias","totalMilliters","fontSize","color","marginBottom","fontWeight","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,OAA9B,EAAuCC,IAAvC,QAAmD,WAAnD;;IAEMC,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;;;;;;wCAIY;AAAA;;AAClBR,MAAAA,KAAK,CACFS,GADH,CAEI,gFAFJ,EAIGC,IAJH,CAIQ,UAAAC,GAAG,EAAI;AACX,QAAA,MAAI,CAACC,QAAL,CAAc;AACZJ,UAAAA,OAAO,EAAEG,GAAG,CAACE,IAAJ,CAASA;AADN,SAAd;AAGD,OARH;AASD;;;6BAEQ;AAAA,UACCL,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAEP,UAAMM,KAAK,GAAG;AACZC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADM;AAEZC,QAAAA,cAAc,EAAE;AAAED,UAAAA,KAAK,EAAE;AAAT;AAFJ,OAAd;AAIA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE;AACLE,UAAAA,QAAQ,EAAE,EADL;AAELC,UAAAA,KAAK,EAAE,qBAFF;AAGLC,UAAAA,YAAY,EAAE,EAHT;AAILC,UAAAA,UAAU,EAAE;AAJP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAYE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,GAAf;AAAoB,QAAA,IAAI,EAAEb,OAA1B;AAAmC,QAAA,KAAK,EAAEM,KAA1C;AAAiD,QAAA,QAAQ,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,MAAX;AAAY,QAAA,IAAI,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,MAAX;AAAY,QAAA,IAAI,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,OAAD;AAAS,QAAA,UAAU,EAAE;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,QAAQ,EAAC,sBAFX;AAGE,QAAA,KAAK,EAAC,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,CAZF,EA0BE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BF,EA4BE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAC,gBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BF,CADF,CADF;AAkCD;;;;EAzDkBxB,S;;AA4DrB,eAAeQ,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"antd\";\nimport axios from \"axios\";\nimport { Chart, Axis, Legend, Tooltip, Geom } from \"bizcharts\";\n\nclass Report extends Component {\n  state = {\n    dayData: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        \"http://localhost:8080/iot/data/getDailyData?meterName=Sensor-1&date=2019-07-03\"\n      )\n      .then(res => {\n        this.setState({\n          dayData: res.data.data\n        });\n      });\n  }\n\n  render() {\n    const { dayData } = this.state;\n    const scale = {\n      hour: { alias: \"Daily\" },\n      totalMilliters: { alias: \"TotalMilliters\" }\n    };\n    return (\n      <div>\n        <Card title=\"Water report\">\n          <p\n            style={{\n              fontSize: 14,\n              color: \"rgba(0, 0, 0, 0.85)\",\n              marginBottom: 16,\n              fontWeight: 500\n            }}\n          >\n            Water report\n          </p>\n\n          <Card type=\"inner\" title=\"Daliy report\">\n            <Chart height={400} data={dayData} scale={scale} forceFit>\n              <Axis title name=\"Daily\" />\n              <Axis title name=\"TotalMilliters\" />\n              <Legend />\n              <Tooltip crosshairs={{ type: \"rect\" }} />\n              <Geom\n                type=\"interval\"\n                position=\"Daily*TotalMilliters\"\n                color=\"month\"\n              />\n            </Chart>\n          </Card>\n\n          <Card type=\"inner\" title=\"Weekly report\" />\n\n          <Card type=\"inner\" title=\"Monthly report\" />\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Report;\n"]},"metadata":{},"sourceType":"module"}