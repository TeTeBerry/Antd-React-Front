{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _temp,\n    _jsxFileName = \"/Users/berry/antd-demo/src/pages/adminpage/UpdateMeterForm.js\";\n\nimport React, { Component } from \"react\";\nimport { Modal, Form, Input } from \"antd\";\nvar CollectionUpdateForm = Form.create({\n  name: \"form_in_modal\"\n})((_temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateMeter, _Component);\n\n  function UpdateMeter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpdateMeter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpdateMeter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      disabled: true,\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(UpdateMeter, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          onCancel = _this$props.onCancel,\n          handleSubmit = _this$props.handleSubmit,\n          form = _this$props.form;\n      var getFieldDecorator = form.getFieldDecorator;\n      return React.createElement(Modal, {\n        visible: visible,\n        title: \"Edit Form\",\n        okText: \"OK\",\n        onCancel: onCancel,\n        onOk: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(Form, {\n        layout: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"ID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, getFieldDecorator(\"mid\", {\n        rules: [{\n          required: true,\n          message: \"Please input meter name!\"\n        }]\n      })(React.createElement(Input, {\n        disabled: this.state.disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Meter Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, getFieldDecorator(\"meterName\", {\n        rules: [{\n          required: true,\n          message: \"Please input meter name!\"\n        }, {\n          max: 10,\n          message: \"Please input correct meter name!\"\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Descriptions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, getFieldDecorator(\"meterDesc\", {\n        rules: [{\n          required: true,\n          message: \"Please input descriptions!\"\n        }, {\n          max: 30,\n          message: \"Max 30 digits!\"\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Member Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, getFieldDecorator(\"memberName\", {\n        rules: [{\n          required: true,\n          message: \"Please input member name!\"\n        }, {\n          max: 15,\n          message: \"Incorrect format!\"\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Room Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, getFieldDecorator(\"room\", {\n        rules: [{\n          required: true,\n          message: \"Please input room number!\"\n        }, {\n          max: 5,\n          message: \"Invild room number!\"\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Member Contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, getFieldDecorator(\"memberContact\", {\n        rules: [{\n          required: true,\n          message: \"Please input member contact!\"\n        }, {\n          type: \"email\",\n          message: \"The input is not valid E-mail!\"\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return UpdateMeter;\n}(Component), _temp));\nexport default CollectionUpdateForm;","map":{"version":3,"sources":["/Users/berry/antd-demo/src/pages/adminpage/UpdateMeterForm.js"],"names":["React","Component","Modal","Form","Input","CollectionUpdateForm","create","name","state","disabled","visible","props","onCancel","handleSubmit","form","getFieldDecorator","rules","required","message","max","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, Form, Input } from \"antd\";\n\nconst CollectionUpdateForm = Form.create({ name: \"form_in_modal\" })(\n  class UpdateMeter extends Component {\n    state = {\n      disabled: true,\n      visible: false\n    };\n\n    render() {\n      const { visible, onCancel, handleSubmit, form } = this.props;\n      const { getFieldDecorator } = form;\n\n      return (\n        <Modal\n          visible={visible}\n          title=\"Edit Form\"\n          okText=\"OK\"\n          onCancel={onCancel}\n          onOk={handleSubmit}\n        >\n          <Form layout=\"vertical\">\n            <Form.Item label=\"ID\">\n              {getFieldDecorator(\"mid\", {\n                rules: [{ required: true, message: \"Please input meter name!\" }]\n              })(<Input disabled={this.state.disabled} />)}\n            </Form.Item>\n            <Form.Item label=\"Meter Name\">\n              {getFieldDecorator(\"meterName\", {\n                rules: [\n                  { required: true, message: \"Please input meter name!\" },\n                  { max: 10, message: \"Please input correct meter name!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Descriptions\">\n              {getFieldDecorator(\"meterDesc\", {\n                rules: [\n                  { required: true, message: \"Please input descriptions!\" },\n                  { max: 30, message: \"Max 30 digits!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Member Name\">\n              {getFieldDecorator(\"memberName\", {\n                rules: [\n                  { required: true, message: \"Please input member name!\" },\n                  { max: 15, message: \"Incorrect format!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Room Number\">\n              {getFieldDecorator(\"room\", {\n                rules: [\n                  { required: true, message: \"Please input room number!\" },\n                  { max: 5, message: \"Invild room number!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Member Contact\">\n              {getFieldDecorator(\"memberContact\", {\n                rules: [\n                  { required: true, message: \"Please input member contact!\" },\n                  {\n                    type: \"email\",\n                    message: \"The input is not valid E-mail!\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n          </Form>\n        </Modal>\n      );\n    }\n  }\n);\n\nexport default CollectionUpdateForm;\n"]},"metadata":{},"sourceType":"module"}