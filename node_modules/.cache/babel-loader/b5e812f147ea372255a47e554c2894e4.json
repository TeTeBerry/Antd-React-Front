{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/client/src/pages/common/Report.js\";\nimport React, { Component } from \"react\";\nimport { Card } from \"antd\";\nimport axios from \"axios\";\nimport { G2, Chart, Geom, Axis, Tooltip, Coord, Label, Legend, View, Guide, Shape, Facet, Util } from \"bizcharts\";\n\nvar Report =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Report, _Component);\n\n  function Report() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Report);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Report)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dayData: []\n    };\n    return _this;\n  }\n\n  _createClass(Report, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8080/iot/data/getDailyData?meterName=Sensor-1&date=2019-07-03\").then(function (res) {\n        _this2.setState({\n          dayData: res.data.data\n        });\n\n        console.log(res.data.data[1].hour);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dayData = this.state.dayData;\n      var cols = {\n        totalMilliters: {\n          tickInterval: 20\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Water report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: 14,\n          color: \"rgba(0, 0, 0, 0.85)\",\n          marginBottom: 16,\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Water report\"), React.createElement(Card, {\n        type: \"inner\",\n        title: \"Daliy report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        height: 400,\n        data: dayData,\n        scale: cols,\n        forceFit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Axis, {\n        name: \"year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        name: \"sales\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        crosshairs: {\n          type: \"y\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Geom, {\n        type: \"interval\",\n        position: \"year*sales\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }))), React.createElement(Card, {\n        type: \"inner\",\n        title: \"Weekly report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Card, {\n        type: \"inner\",\n        title: \"Monthly report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Report;\n}(Component);\n\nexport default Report;","map":{"version":3,"sources":["/Users/berry/antd-demo/client/src/pages/common/Report.js"],"names":["React","Component","Card","axios","G2","Chart","Geom","Axis","Tooltip","Coord","Label","Legend","View","Guide","Shape","Facet","Util","Report","state","dayData","get","then","res","setState","data","console","log","hour","cols","totalMilliters","tickInterval","fontSize","color","marginBottom","fontWeight","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,EADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,OALF,EAMEC,KANF,EAOEC,KAPF,EAQEC,MARF,EASEC,IATF,EAUEC,KAVF,EAWEC,KAXF,EAYEC,KAZF,EAaEC,IAbF,QAcO,WAdP;;IAgBMC,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;;;;;;wCAIY;AAAA;;AAClBhB,MAAAA,KAAK,CACFiB,GADH,CAEI,gFAFJ,EAIGC,IAJH,CAIQ,UAAAC,GAAG,EAAI;AACX,QAAA,MAAI,CAACC,QAAL,CAAc;AACZJ,UAAAA,OAAO,EAAEG,GAAG,CAACE,IAAJ,CAASA;AADN,SAAd;;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAc,CAAd,EAAiBG,IAA7B;AACD,OATH;AAUD;;;6BAEQ;AAAA,UACCR,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAEP,UAAMS,IAAI,GAAG;AACXC,QAAAA,cAAc,EAAE;AACdC,UAAAA,YAAY,EAAE;AADA;AADL,OAAb;AAKA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,EADL;AAELC,UAAAA,KAAK,EAAE,qBAFF;AAGLC,UAAAA,YAAY,EAAE,EAHT;AAILC,UAAAA,UAAU,EAAE;AAJP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAYE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,GAAf;AAAoB,QAAA,IAAI,EAAEf,OAA1B;AAAmC,QAAA,KAAK,EAAES,IAA1C;AAAgD,QAAA,QAAQ,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,OAAD;AACE,QAAA,UAAU,EAAE;AACVO,UAAAA,IAAI,EAAE;AADI,SADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAQE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,QAAQ,EAAC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,CAZF,EAyBE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBF,EA2BE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAC,gBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BF,CADF,CADF;AAiCD;;;;EA1DkBlC,S;;AA6DrB,eAAegB,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"antd\";\nimport axios from \"axios\";\nimport {\n  G2,\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Coord,\n  Label,\n  Legend,\n  View,\n  Guide,\n  Shape,\n  Facet,\n  Util\n} from \"bizcharts\";\n\nclass Report extends Component {\n  state = {\n    dayData: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        \"http://localhost:8080/iot/data/getDailyData?meterName=Sensor-1&date=2019-07-03\"\n      )\n      .then(res => {\n        this.setState({\n          dayData: res.data.data\n        });\n        console.log(res.data.data[1].hour);\n      });\n  }\n\n  render() {\n    const { dayData } = this.state;\n    const cols = {\n      totalMilliters: {\n        tickInterval: 20\n      }\n    };\n    return (\n      <div>\n        <Card title=\"Water report\">\n          <p\n            style={{\n              fontSize: 14,\n              color: \"rgba(0, 0, 0, 0.85)\",\n              marginBottom: 16,\n              fontWeight: 500\n            }}\n          >\n            Water report\n          </p>\n\n          <Card type=\"inner\" title=\"Daliy report\">\n            <Chart height={400} data={dayData} scale={cols} forceFit>\n              <Axis name=\"year\" />\n              <Axis name=\"sales\" />\n              <Tooltip\n                crosshairs={{\n                  type: \"y\"\n                }}\n              />\n              <Geom type=\"interval\" position=\"year*sales\" />\n            </Chart>\n          </Card>\n\n          <Card type=\"inner\" title=\"Weekly report\" />\n\n          <Card type=\"inner\" title=\"Monthly report\" />\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Report;\n"]},"metadata":{},"sourceType":"module"}