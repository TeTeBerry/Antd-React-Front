{"ast":null,"code":"import _classCallCheck from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/berry/antd-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/berry/antd-demo/client/src/pages/common/Report.js\";\nimport React, { Component } from \"react\";\nimport { Card } from \"antd\";\nimport axios from \"axios\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactFC.fcRoot(FusionCharts, Charts, Widgets, FusionTheme);\n\nvar Report =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Report, _Component);\n\n  function Report() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Report);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Report)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showChart: false,\n      initValue: 0,\n      dataSource: {\n        chart: {\n          caption: \"Real Time Water Flow Rate\",\n          subCaption: \"\",\n          xAxisName: \"Local Time\",\n          yAxisName: \"Output Liquid Quantity\",\n          numberPrefix: \"mL\",\n          refreshinterval: \"2\",\n          slantLabels: \"1\",\n          numdisplaysets: \"10\",\n          labeldisplay: \"rotate\",\n          showValues: \"0\",\n          showRealTimeValue: \"0\",\n          theme: \"fusion\"\n        },\n        categories: [{\n          category: [{\n            label: \"\"\n          }]\n        }],\n        dataset: [{\n          data: [{\n            value: 0\n          }]\n        }]\n      }\n    };\n    _this.chartConfigs = {\n      type: \"realtimeline\",\n      renderAt: \"container\",\n      width: \"100%\",\n      height: \"400\",\n      dataFormat: \"json\"\n    };\n    return _this;\n  }\n\n  _createClass(Report, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8080/iot/data/getDailyData?meterName=Sensor-1&date=2019-07-03\").then(function (res) {\n        _this2.setState({\n          dayData: res.data.data\n        });\n\n        console.log(res.data.data);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Water report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: 14,\n          color: \"rgba(0, 0, 0, 0.85)\",\n          marginBottom: 16,\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Water report\"), React.createElement(Card, {\n        type: \"inner\",\n        title: \"Daliy report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card custom-card mb-5 mb-xs-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.showChart ? React.createElement(ReactFC, Object.assign({}, this.chartConfigs, {\n        dataSource: this.state.dataSource,\n        onRender: this.getChartRef.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })) : null)))), React.createElement(Card, {\n        type: \"inner\",\n        title: \"Weekly report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Card, {\n        type: \"inner\",\n        title: \"Monthly report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Report;\n}(Component);\n\nexport default Report;","map":{"version":3,"sources":["/Users/berry/antd-demo/client/src/pages/common/Report.js"],"names":["React","Component","Card","axios","FusionCharts","Charts","Widgets","ReactFC","FusionTheme","fcRoot","Report","state","showChart","initValue","dataSource","chart","caption","subCaption","xAxisName","yAxisName","numberPrefix","refreshinterval","slantLabels","numdisplaysets","labeldisplay","showValues","showRealTimeValue","theme","categories","category","label","dataset","data","value","chartConfigs","type","renderAt","width","height","dataFormat","get","then","res","setState","dayData","console","log","fontSize","color","marginBottom","fontWeight","getChartRef","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"antd\";\nimport axios from \"axios\";\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactFC.fcRoot(FusionCharts, Charts, Widgets, FusionTheme);\n\nclass Report extends Component {\n  state = {\n    showChart: false,\n    initValue: 0,\n    dataSource: {\n      chart: {\n        caption: \"Real Time Water Flow Rate\",\n        subCaption: \"\",\n        xAxisName: \"Local Time\",\n        yAxisName: \"Output Liquid Quantity\",\n        numberPrefix: \"mL\",\n        refreshinterval: \"2\",\n        slantLabels: \"1\",\n        numdisplaysets: \"10\",\n        labeldisplay: \"rotate\",\n        showValues: \"0\",\n        showRealTimeValue: \"0\",\n        theme: \"fusion\"\n      },\n      categories: [\n        {\n          category: [\n            {\n              label: \"\"\n            }\n          ]\n        }\n      ],\n      dataset: [\n        {\n          data: [\n            {\n              value: 0\n            }\n          ]\n        }\n      ]\n    }\n  };\n  chartConfigs = {\n    type: \"realtimeline\",\n    renderAt: \"container\",\n    width: \"100%\",\n    height: \"400\",\n    dataFormat: \"json\"\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        \"http://localhost:8080/iot/data/getDailyData?meterName=Sensor-1&date=2019-07-03\"\n      )\n      .then(res => {\n        this.setState({\n          dayData: res.data.data\n        });\n        console.log(res.data.data);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <Card title=\"Water report\">\n          <p\n            style={{\n              fontSize: 14,\n              color: \"rgba(0, 0, 0, 0.85)\",\n              marginBottom: 16,\n              fontWeight: 500\n            }}\n          >\n            Water report\n          </p>\n\n          <Card type=\"inner\" title=\"Daliy report\">\n            <div className=\"col-12\">\n              <div className=\"card custom-card mb-5 mb-xs-4\">\n                <div className=\"card-body\">\n                  {this.state.showChart ? (\n                    <ReactFC\n                      {...this.chartConfigs}\n                      dataSource={this.state.dataSource}\n                      onRender={this.getChartRef.bind(this)}\n                    />\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          <Card type=\"inner\" title=\"Weekly report\" />\n\n          <Card type=\"inner\" title=\"Monthly report\" />\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Report;\n"]},"metadata":{},"sourceType":"module"}